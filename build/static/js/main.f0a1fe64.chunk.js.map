{"version":3,"sources":["genericFunctions.js","Status.js","CountryPopup.js","MyMap.js","Changed.js","PAPopup.js","PAPopupList.js","AppBar.js","StatusCheckbox.js","FooterBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getFeatureStatus","feature","status","layer","id","window","LYR_TO_CHANGED_ATTRIBUTE","LYR_TO_GEOMETRY_POINT_TO_POLYGON","LYR_TO_GEOMETRY_POINT_COUNT_CHANGED_POLYGON","LYR_TO_GEOMETRY_SHIFTED_POLYGON","LYR_TO_NEW_POLYGON","LYR_TO_NEW_POINT","LYR_FROM_DELETED_POLYGON","LYR_FROM_DELETED_POINT","LYR_TO_POLYGON","LYR_TO_POINT","Status","classname","this","props","text","className","React","Component","CountryPopup","clickCountryPopup","country","coordinates","centroid","title","name","onClick","bind","length","substr","style","display","showStatuses","indexOf","added","removed","changed","Map","ReactMapboxGl","accessToken","INITIAL_CENTER","INITIAL_ZOOM","TILES_PREFIX","TILES_SUFFIX","P_FROM_GEOMETRY_SHIFTED_LINE","P_FROM_GEOMETRY_POINT_COUNT_CHANGED_LINE","P_FROM_GEOMETRY_POINT_TO_POLYGON","P_FROM_DELETED_POLYGON","P_FROM_DELETED_POINT","P_TO_CHANGED_ATTRIBUTE","P_TO_CHANGED_GEOMETRY","P_TO_CHANGED_GEOMETRY_LINE","P_TO_NEW_POLYGON","P_TO_NEW_POINT","P_TO_POLYGON","P_TO_POINT","P_SELECTED_POINT","P_SELECTED_LINE","P_SELECTED_POLYGON","MyMap","state","nextProps","nextState","JSON","stringify","map","setMap","initialiseLayers","addDynamicLayers","iso3s","setFilter","concat","addLayer","sourceId","SRC_FROM_POLYGONS","type","sourceLayer","fromVersion","abbreviated","layout","visibility","paint","filter","SRC_FROM_POINTS","SRC_TO_POLYGONS","toVersion","SRC_TO_POINTS","LYR_FROM_GEOMETRY_POINT_TO_POLYGON","LYR_FROM_GEOMETRY_POINT_COUNT_CHANGED_LINE","LYR_FROM_GEOMETRY_SHIFTED_LINE","LYR_TO_GEOMETRY_POINT_TO_POLYGON_LINE","LYR_TO_GEOMETRY_POINT_COUNT_CHANGED_POLYGON_LINE","LYR_TO_GEOMETRY_SHIFTED_POLYGON_LINE","LYR_FROM_SELECTED_POLYGON","LYR_FROM_SELECTED_LINE","LYR_FROM_SELECTED_POINT","LYR_TO_SELECTED_POLYGON","LYR_TO_SELECTED_LINE","LYR_TO_SELECTED_POINT","details","getLayer","removeLayer","undefined","countryPopups","toPolygonsFilter","_from","_to","toPointsFilter","addedPAs","removedPAs","changedPAs","geometryShiftedPAs","geometryPointCountChangedPAs","geometryPointToPolygonPAs","geometryChangedPAs","view","global_summary","push","iso3","key","visibleLayers","statuses","visible","country_summary","forEach","record","wdpaids","item","includes","MAP_STYLE_DEFAULT","containerStyle","height","width","center","zoom","onMoveStart","hideCountryPopups","onMoveEnd","showCountryPopups","onStyleLoad","styleLoaded","tileJsonSource","attribution","tiles","Changed","row","original","previous","current","find","changedData","geometryData","attributesData","Fragment","showPagination","minRows","data","columns","Header","accessor","headerStyle","Cell","renderFrom","renderTo","PAPopup","properties","country_pa_diffs","previous_feature","pa_data","pa","wdpaid","Number","geometry_change","querySourceFeatures","from","attribute_change","attribute","dataForPopup","children","link","left","point","x","top","y","features","href","target","rel","getChangedData","onMouseEnter","onMouseEnterPAPopup","onMouseLeave","onMouseLeavePAPopup","PAPopupList","dataForPopupList","showPAPopup","iucn_cat","onMouseEnterPAPopuplist","onMouseLeavePAPopuplist","AppBar","selectedVersion","versions","version","hasOwnProperty","value","showChanges","event","newValue","setState","setVersion","setShowChanges","marks","index","label","shortTitle","Slider","min","max","onChangeCommitted","handleChange","valueLabelDisplay","defaultChecked","onChange","handleShowChangesChange","for","StatusCheckbox","e","handleStatusChange","short_text","FooterBar","present","REST_BASE_URL","hightlightRules","highlightLayers","paintPropertyFrom","App","layers","selected","mouseOverPAPopup","mouseOverPAPopuplist","PAPopuptimer","PAPopupListtimer","wdpaidsUnderMouse","_versions","Object","assign","toLowerCase","slice","versionChanged","on","mouseMove","getGlobalSummary","then","getVisibleCountries","hideChanges","fullVersion","url","params","Promise","resolve","reject","jsonp","promise","response","err","countryData","countriesJson","parse","geojson","_get","global_summary_all","records","geometry","isCountryVisible","_statuses","_presences","global_summary_data","no_change_status","no_change","setLayoutProperty","fitBounds","west","south","east","north","padding","bottom","right","easing","num","setStatusPresence","queryRenderedFeatures","removeDuplicateFeatures","arraysAreTheSame","clearPopups","arr","uniqueValues","uniqueFeatures","arr1","arr2","join","closePAPopuplist","timer","clearTimeout","closePAPopup","showPAPopuplist","deselectFeatures","highlightFeature","clientX","clientY","ms","setTimeout","_rule","increaseOpacity","targetLayer","increaseBy","getPaintProperty","keys","rgba","values","getNewOpacity","alpha","setPaintProperty","layerid","getStyle","_show","pop","showPAPopupFromList","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0a1fe64.chunk.js","sourcesContent":["module.exports = {\n\tgetFeatureStatus: function(feature){\n\t\tlet status = \"\";\n\t\tswitch (feature.layer.id) {\n\t\t\tcase window.LYR_TO_CHANGED_ATTRIBUTE:\n\t\t\tcase window.LYR_TO_GEOMETRY_POINT_TO_POLYGON:\n\t\t\tcase window.LYR_TO_GEOMETRY_POINT_COUNT_CHANGED_POLYGON:\n\t\t\tcase window.LYR_TO_GEOMETRY_SHIFTED_POLYGON:\n\t\t\t\tstatus = \"changed\";\n\t\t\t\tbreak;\n\t\t\tcase window.LYR_TO_NEW_POLYGON:\n\t\t\tcase window.LYR_TO_NEW_POINT:\n\t\t\t\tstatus = \"added\";\n\t\t\t\tbreak;\n\t\t\tcase window.LYR_FROM_DELETED_POLYGON:\n\t\t\tcase window.LYR_FROM_DELETED_POINT:\n\t\t\t\tstatus = \"removed\";\n\t\t\t\tbreak;\n\t\t\tcase window.LYR_TO_POLYGON:\n\t\t\tcase window.LYR_TO_POINT:\n\t\t\t\tstatus = \"no_change\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t//code\n\t\t}\n\t\treturn status;\n\t},\n};","import React from 'react';\n\nclass Status extends React.Component {\n\trender() {\n\t    let classname = \"stat \" + this.props.status;\n\t    let text=\"\";\n\t    switch (this.props.status) {\n\t        case 'added':\n\t            text = \"++\";\n\t            break;\n\t        case 'removed':\n\t            text = \"--\";\n\t            break;\n\t        case 'changed':\n\t            text = \"\"; //≠\n\t            break;\n\t        default:\n\t            // code\n\t    }\n\t\treturn (\n\t\t    <span className={classname}>{text}</span>\n\t\t);\n\t}\n}\n\nexport default Status;","import React from 'react';\nimport { Popup } from 'react-mapbox-gl';\nimport Status from './Status.js';\n\nclass CountryPopup extends React.Component {\n    clickCountryPopup(){\n      this.props.clickCountryPopup(this.props.country);\n    }\n    render() {\n        return (\n            <Popup coordinates={this.props.country.centroid} className={'countryPopup'}>\n              <div title={\"View details for \" + this.props.country.name} onClick={this.clickCountryPopup.bind(this)}>\n                <div className={'name'}>{(this.props.country.name.length > 40) ? (this.props.country.name.substr(0,30) + '...') : this.props.country.name}</div>\n                <div className={'stats'}>\n                  <div className={''} style={{display: ((this.props.showStatuses.indexOf('added') !==-1)&&this.props.country.added) ? 'inline' : 'none'}} title={this.props.country.added + ' protected areas added'}>{this.props.country.added}<Status status={'added'}/></div>\n                  <div className={''} style={{display: ((this.props.showStatuses.indexOf('removed') !==-1)&&this.props.country.removed) ? 'inline' : 'none'}} title={this.props.country.removed + ' protected areas removed'}>{this.props.country.removed}<Status status={'removed'}/></div>\n                  <div className={''} style={{display: ((this.props.showStatuses.indexOf('changed') !==-1)&&this.props.country.changed) ? 'inline' : 'none'}} title={this.props.country.changed + ' changed protected areas'}>{this.props.country.changed}<Status status={'changed'}/></div>\n                </div>\n              </div>\n            </Popup>\n        );\n    }\n}\n\nexport default CountryPopup;\n","import React from 'react';\nimport ReactMapboxGl, {  Source  } from 'react-mapbox-gl';\nimport CountryPopup from './CountryPopup.js';\n\nconst Map = ReactMapboxGl({\n  accessToken: \"pk.eyJ1IjoiYmxpc2h0ZW4iLCJhIjoiMEZrNzFqRSJ9.0QBRA2HxTb8YHErUFRMPZg\"\n});\n\n// const INITIAL_CENTER = [-175.15, -21.15]; \nconst INITIAL_CENTER = [0, 0];\nconst INITIAL_ZOOM = [2];\nconst TILES_PREFIX = \"https://geospatial.jrc.ec.europa.eu/geoserver/gwc/service/wmts?layer=marxan:\";\nconst TILES_SUFFIX = \"&tilematrixset=EPSG:900913&Service=WMTS&Request=GetTile&Version=1.0.0&Format=application/x-protobuf;type=mapbox-vector&TileMatrix=EPSG:900913:{z}&TileCol={x}&TileRow={y}\";\n//paint properties\nconst P_FROM_GEOMETRY_SHIFTED_LINE = { \"line-color\": \"rgb(99,148,69)\", \"line-width\": 1, \"line-opacity\": 0.6, \"line-dasharray\": [3,3]};\nconst P_FROM_GEOMETRY_POINT_COUNT_CHANGED_LINE = { \"line-color\": \"rgb(99,148,69)\", \"line-width\": 1, \"line-opacity\": 0.6, \"line-dasharray\": [3,3]};\nconst P_FROM_GEOMETRY_POINT_TO_POLYGON = {\"circle-radius\": 5, \"circle-color\": \"rgb(99,148,69)\", \"circle-opacity\": 0.6};\nconst P_FROM_DELETED_POLYGON = { \"fill-color\": \"rgba(255,0,0, 0.2)\", \"fill-outline-color\": \"rgba(255,0,0,0.5)\"};\nconst P_FROM_DELETED_POINT = {\"circle-radius\": 5, \"circle-color\": \"rgb(255,0,0)\", \"circle-opacity\": 0.6};\nconst P_TO_CHANGED_ATTRIBUTE = { \"fill-color\": \"rgba(99,148,69,0.4)\", \"fill-outline-color\": \"rgba(99,148,69,0.8)\"};\nconst P_TO_CHANGED_GEOMETRY = { \"fill-color\": \"rgba(99,148,69,0.2)\", \"fill-outline-color\": \"rgba(0,0,0,0)\"};\nconst P_TO_CHANGED_GEOMETRY_LINE = { \"line-color\": \"rgb(99,148,69)\", \"line-width\": 2, \"line-opacity\": 0.6, \"line-dasharray\": [3,3]};\nconst P_TO_NEW_POLYGON = { \"fill-color\": \"rgba(63,127,191,0.2)\", \"fill-outline-color\": \"rgba(63,127,191,0.6)\"};\nconst P_TO_NEW_POINT = {\"circle-radius\": 10, \"circle-color\": \"rgb(63,127,191)\", \"circle-opacity\": 0.6};\nconst P_TO_POLYGON = { \"fill-color\": \"rgba(99,148,69,0.2)\", \"fill-outline-color\": \"rgba(99,148,69,0.3)\"};\nconst P_TO_POINT = {\"circle-radius\": 5, \"circle-color\": \"rgb(99,148,69)\", \"circle-opacity\": 0};\nconst P_SELECTED_POINT = {\"circle-radius\": 5, \"circle-color\": \"rgb(0,0,0)\", \"circle-opacity\": 0};\nconst P_SELECTED_LINE = { \"line-color\": \"rgb(0,0,0)\", \"line-width\": 2, \"line-opacity\": 0};\nconst P_SELECTED_POLYGON = { \"fill-color\": \"rgba(0,0,0,0)\", \"fill-outline-color\": \"rgba(255,0,0,0)\"};\n\nclass MyMap extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n    };\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    // this is a crude hack to compare properties -TODO SORT THIS OUT\n    return (JSON.stringify(this.props) !== JSON.stringify(nextProps))||(JSON.stringify(this.state) !== JSON.stringify(nextState)); \n  }\t\n  clickCountryPopup(country){\n    //set the currently selected country\n    this.country = country;\n    this.props.clickCountryPopup(country);\n  }\n  //called when the maps style has loaded\n  styleLoaded(map){\n    //set a local property\n    this.map = map;\n    //set a property in the App class\n    this.props.setMap(map);\n    //initialise the layers\n    this.initialiseLayers();\n  }\n  //adds the dynamic layers and filters them by country\n  initialiseLayers(){\n    //add the dynamic layers\n    this.addDynamicLayers();\n    //filter the to points and polygons layer - if no countries are passed then show all countries\n    if (this.iso3s.length === 0){\n      this.map.setFilter(window.LYR_TO_POLYGON, null);\n    }else{\n      this.map.setFilter(window.LYR_TO_POLYGON, ['in', 'iso3'].concat(this.iso3s));  \n    }\n  }\n  addDynamicLayers(){\n    //add dynamic layers\n    //removed protected areas layers\n    this.addLayer({id: window.LYR_FROM_DELETED_POLYGON, sourceId: window.SRC_FROM_POLYGONS, type: \"fill\", sourceLayer: \"wdpa_\" + this.props.fromVersion.abbreviated + \"_polygons\", layout: {visibility: \"visible\"}, paint: P_FROM_DELETED_POLYGON, filter:['==', 'wdpaid','-1']});\n    this.addLayer({id: window.LYR_FROM_DELETED_POINT, sourceId: window.SRC_FROM_POINTS, type: \"circle\", sourceLayer: \"wdpa_\" + this.props.fromVersion.abbreviated + \"_points\", layout: {visibility: \"visible\"}, paint: P_FROM_DELETED_POINT, filter:['==', 'wdpaid','-1']});\n    //no change protected areas layers\n    this.addLayer({id: window.LYR_TO_POLYGON, sourceId: window.SRC_TO_POLYGONS, type: \"fill\", sourceLayer: \"wdpa_\" + this.props.toVersion.abbreviated + \"_polygons\", layout: {visibility: \"visible\"}, paint: P_TO_POLYGON, filter:['==', 'wdpaid','-1']});\n    this.addLayer({id: window.LYR_TO_POINT, sourceId: window.SRC_TO_POINTS, type: \"circle\", sourceLayer: \"wdpa_\" + this.props.toVersion.abbreviated + \"_points\", layout: {visibility: \"visible\"}, paint: P_TO_POINT, filter:['==', 'wdpaid','-1']});\n    //attribute change in protected areas layers\n    this.addLayer({id: window.LYR_TO_CHANGED_ATTRIBUTE, sourceId: window.SRC_TO_POLYGONS, type: \"fill\", sourceLayer: \"wdpa_\" + this.props.toVersion.abbreviated + \"_polygons\", layout: {visibility: \"visible\"}, paint: P_TO_CHANGED_ATTRIBUTE, filter:['==', 'wdpaid','-1']});\n    //geometry change in protected areas layers - from\n    this.addLayer({id: window.LYR_FROM_GEOMETRY_POINT_TO_POLYGON, sourceId: window.SRC_FROM_POINTS, type: \"circle\", sourceLayer: \"wdpa_\" + this.props.fromVersion.abbreviated + \"_points\", layout: {visibility: \"visible\"}, paint: P_FROM_GEOMETRY_POINT_TO_POLYGON, filter:['==', 'wdpaid','-1']});\n    this.addLayer({id: window.LYR_FROM_GEOMETRY_POINT_COUNT_CHANGED_LINE, sourceId: window.SRC_FROM_POLYGONS, type: \"line\", sourceLayer: \"wdpa_\" + this.props.fromVersion.abbreviated + \"_polygons\", layout: {visibility: \"visible\"}, paint: P_FROM_GEOMETRY_POINT_COUNT_CHANGED_LINE, filter:['==', 'wdpaid','-1']});\n    this.addLayer({id: window.LYR_FROM_GEOMETRY_SHIFTED_LINE, sourceId: window.SRC_FROM_POLYGONS, type: \"line\", sourceLayer: \"wdpa_\" + this.props.fromVersion.abbreviated + \"_polygons\", layout: {visibility: \"visible\"}, paint: P_FROM_GEOMETRY_SHIFTED_LINE, filter:['==', 'wdpaid','-1']});\n    //geometry change in protected areas layers - to\n    this.addLayer({id: window.LYR_TO_GEOMETRY_POINT_TO_POLYGON, sourceId: window.SRC_TO_POLYGONS, type: \"fill\", sourceLayer: \"wdpa_\" + this.props.toVersion.abbreviated + \"_polygons\", layout: {visibility: \"visible\"}, paint: P_TO_CHANGED_GEOMETRY, filter:['==', 'wdpaid','-1']});\n    this.addLayer({id: window.LYR_TO_GEOMETRY_POINT_TO_POLYGON_LINE, sourceId: window.SRC_TO_POLYGONS, type: \"line\", sourceLayer: \"wdpa_\" + this.props.toVersion.abbreviated + \"_polygons\", layout: {visibility: \"visible\"}, paint: P_TO_CHANGED_GEOMETRY_LINE, filter:['==', 'wdpaid','-1']});\n    this.addLayer({id: window.LYR_TO_GEOMETRY_POINT_COUNT_CHANGED_POLYGON, sourceId: window.SRC_TO_POLYGONS, type: \"fill\", sourceLayer: \"wdpa_\" + this.props.toVersion.abbreviated + \"_polygons\", layout: {visibility: \"visible\"}, paint: P_TO_CHANGED_GEOMETRY, filter:['==', 'wdpaid','-1']});\n    this.addLayer({id: window.LYR_TO_GEOMETRY_POINT_COUNT_CHANGED_POLYGON_LINE, sourceId: window.SRC_TO_POLYGONS, type: \"line\", sourceLayer: \"wdpa_\" + this.props.toVersion.abbreviated + \"_polygons\", layout: {visibility: \"visible\"}, paint: P_TO_CHANGED_GEOMETRY_LINE, filter:['==', 'wdpaid','-1']});\n    this.addLayer({id: window.LYR_TO_GEOMETRY_SHIFTED_POLYGON, sourceId: window.SRC_TO_POLYGONS, type: \"fill\", sourceLayer: \"wdpa_\" + this.props.toVersion.abbreviated + \"_polygons\", layout: {visibility: \"visible\"}, paint: P_TO_CHANGED_GEOMETRY, filter:['==', 'wdpaid','-1']});\n    this.addLayer({id: window.LYR_TO_GEOMETRY_SHIFTED_POLYGON_LINE, sourceId: window.SRC_TO_POLYGONS, type: \"line\", sourceLayer: \"wdpa_\" + this.props.toVersion.abbreviated + \"_polygons\", layout: {visibility: \"visible\"}, paint: P_TO_CHANGED_GEOMETRY_LINE, filter:['==', 'wdpaid','-1']});\n    //added protected areas layers\n    this.addLayer({id: window.LYR_TO_NEW_POLYGON, sourceId: window.SRC_TO_POLYGONS, type: \"fill\", sourceLayer: \"wdpa_\" + this.props.toVersion.abbreviated + \"_polygons\", layout: {visibility: \"visible\"}, paint: P_TO_NEW_POLYGON, filter:['==', 'wdpaid','-1']});\n    this.addLayer({id: window.LYR_TO_NEW_POINT, sourceId: window.SRC_TO_POINTS, type: \"circle\", sourceLayer: \"wdpa_\" + this.props.toVersion.abbreviated + \"_points\", layout: {visibility: \"visible\"}, paint: P_TO_NEW_POINT, filter:['==', 'wdpaid','-1']});\n    //selection layers\n    this.addLayer({id: window.LYR_FROM_SELECTED_POLYGON, sourceId: window.SRC_FROM_POLYGONS, type: \"fill\", sourceLayer: \"wdpa_\" + this.props.fromVersion.abbreviated + \"_polygons\", layout: {visibility: \"visible\"}, paint: P_SELECTED_POLYGON, filter:['==', 'wdpaid','-1']});\n    this.addLayer({id: window.LYR_FROM_SELECTED_LINE, sourceId: window.SRC_FROM_POLYGONS, type: \"line\", sourceLayer: \"wdpa_\" + this.props.fromVersion.abbreviated + \"_polygons\", layout: {visibility: \"visible\"}, paint: P_SELECTED_LINE, filter:['==', 'wdpaid','-1']});\n    this.addLayer({id: window.LYR_FROM_SELECTED_POINT, sourceId: window.SRC_FROM_POINTS, type: \"circle\", sourceLayer: \"wdpa_\" + this.props.fromVersion.abbreviated + \"_points\", layout: {visibility: \"visible\"}, paint: P_SELECTED_POINT, filter:['==', 'wdpaid','-1']});\n    this.addLayer({id: window.LYR_TO_SELECTED_POLYGON, sourceId: window.SRC_TO_POLYGONS, type: \"fill\", sourceLayer: \"wdpa_\" + this.props.toVersion.abbreviated + \"_polygons\", layout: {visibility: \"visible\"}, paint: P_SELECTED_POLYGON, filter:['==', 'wdpaid','-1']});\n    this.addLayer({id: window.LYR_TO_SELECTED_LINE, sourceId: window.SRC_TO_POLYGONS, type: \"line\", sourceLayer: \"wdpa_\" + this.props.toVersion.abbreviated + \"_polygons\", layout: {visibility: \"visible\"}, paint: P_SELECTED_LINE, filter:['==', 'wdpaid','-1']});\n    this.addLayer({id: window.LYR_TO_SELECTED_POINT, sourceId: window.SRC_TO_POINTS, type: \"circle\", sourceLayer: \"wdpa_\" + this.props.toVersion.abbreviated + \"_points\", layout: {visibility: \"visible\"}, paint: P_SELECTED_POINT, filter:['==', 'wdpaid','-1']});\n  }\n  //adds an individual layer to the map\n  addLayer(details){\n    //if the layer already exists then delete it\n    if (this.map.getLayer(details.id)) this.map.removeLayer(details.id);\n    this.map.addLayer({\n      'id': details.id,\n      'type': details.type,\n      'source': details.sourceId,\n      'source-layer': details.sourceLayer,\n      'paint': details.paint,\n      'filter': details.filter\n    });\n  }\n  render() {\n    if ((this.props.toVersion === undefined)||(this.props.fromVersion === undefined)) return null;\n    //get the from and to versions in abbreviated form to get the vector tiles\n    let _from = this.props.fromVersion.abbreviated;\n    let _to = this.props.toVersion.abbreviated;\n    let countryPopups, toPolygonsFilter, toPointsFilter = [], addedPAs=[], removedPAs=[], changedPAs=[], geometryShiftedPAs=[], geometryPointCountChangedPAs= [], geometryPointToPolygonPAs = [], geometryChangedPAs =[];\n    switch (this.props.view) {\n      case 'global':\n        //get the country popups\n        this.iso3s = [];\n        countryPopups = this.props.global_summary.map(country => {\n          this.iso3s.push(country.iso3);\n          return <CountryPopup country={country} key={country.iso3} showStatuses={this.props.showStatuses} clickCountryPopup={this.clickCountryPopup.bind(this)}/>;\n        });\n        //if the map is available then add the layers and filter them\n        if (this.map !== undefined) this.initialiseLayers();\n        break;\n      case 'country':\n        //get the layers to show\n        let visibleLayers = this.props.statuses.map(status => {return (status.visible) ? status.key : null});\n        //get the stats data for the country\n        this.props.country_summary.forEach(record => {\n          switch (record.status) {\n            case 'added':\n              if (visibleLayers.indexOf(\"added\") !== -1) addedPAs = record.wdpaids;\n              break;\n            case 'removed':\n              if (visibleLayers.indexOf(\"removed\") !== -1) removedPAs = record.wdpaids;\n              break;\n            case 'changed':\n              if (visibleLayers.indexOf(\"changed\") !== -1) changedPAs = record.wdpaids;\n              break;\n            case 'geometry_shifted':\n              if (visibleLayers.indexOf(\"changed\") !== -1) geometryShiftedPAs = record.wdpaids;\n              break;\n            case 'point_count_changed':\n              if (visibleLayers.indexOf(\"changed\") !== -1) geometryPointCountChangedPAs = record.wdpaids;\n              break;\n            case 'point_to_polygon':\n              if (visibleLayers.indexOf(\"changed\") !== -1) geometryPointToPolygonPAs = record.wdpaids;\n              break;\n            default:\n              // code\n            }\n        });\n        //get the array of all protected areas that have changed geometries\n        geometryChangedPAs = geometryShiftedPAs.concat(geometryPointCountChangedPAs).concat(geometryPointToPolygonPAs);\n        //the toLayer should exclude all of the other protected areas that are changed, added or have their geometry shifted\n        toPolygonsFilter = ['all', ['!in', 'wdpaid'].concat(changedPAs).concat(addedPAs).concat(geometryChangedPAs),['in', 'iso3', this.country.iso3]];\n        //the toPoints layer should exclude all new point PAs (which will be shown in blue)\n        toPointsFilter = ['all', ['!in', 'wdpaid'].concat(addedPAs),['in', 'iso3', this.country.iso3]];        \n        //the changed layer should exclude all of the other protected areas that have had their geometry changed - these will be rendered with dashed outlines\n        changedPAs = changedPAs.filter(item => !geometryChangedPAs.includes(item));\n        //set the filters on the layers\n        this.map.setFilter(window.LYR_FROM_DELETED_POLYGON,['in', 'wdpaid'].concat(removedPAs));\n        this.map.setFilter(window.LYR_FROM_DELETED_POINT, ['in', 'wdpaid'].concat(removedPAs));\n        this.map.setFilter(window.LYR_TO_POLYGON, toPolygonsFilter);\n        this.map.setFilter(window.LYR_TO_POINT, toPointsFilter);\n        this.map.setFilter(window.LYR_TO_CHANGED_ATTRIBUTE, ['in', 'wdpaid'].concat(changedPAs));\n        this.map.setFilter(window.LYR_FROM_GEOMETRY_POINT_TO_POLYGON, ['in', 'wdpaid'].concat(geometryPointToPolygonPAs));\n        this.map.setFilter(window.LYR_FROM_GEOMETRY_POINT_COUNT_CHANGED_LINE, ['in', 'wdpaid'].concat(geometryPointCountChangedPAs));\n        this.map.setFilter(window.LYR_FROM_GEOMETRY_SHIFTED_LINE, ['in', 'wdpaid'].concat(geometryShiftedPAs));\n        this.map.setFilter(window.LYR_TO_GEOMETRY_POINT_TO_POLYGON, ['in', 'wdpaid'].concat(geometryPointToPolygonPAs));\n        this.map.setFilter(window.LYR_TO_GEOMETRY_POINT_TO_POLYGON_LINE, ['in', 'wdpaid'].concat(geometryPointToPolygonPAs));\n        this.map.setFilter(window.LYR_TO_GEOMETRY_POINT_COUNT_CHANGED_POLYGON, ['in', 'wdpaid'].concat(geometryPointCountChangedPAs));\n        this.map.setFilter(window.LYR_TO_GEOMETRY_POINT_COUNT_CHANGED_POLYGON_LINE, ['in', 'wdpaid'].concat(geometryPointCountChangedPAs));\n        this.map.setFilter(window.LYR_TO_GEOMETRY_SHIFTED_POLYGON, ['in', 'wdpaid'].concat(geometryShiftedPAs));\n        this.map.setFilter(window.LYR_TO_GEOMETRY_SHIFTED_POLYGON_LINE, ['in', 'wdpaid'].concat(geometryShiftedPAs));\n        this.map.setFilter(window.LYR_TO_NEW_POLYGON, ['in', 'wdpaid'].concat(addedPAs));\n        this.map.setFilter(window.LYR_TO_NEW_POINT, ['in', 'wdpaid'].concat(addedPAs));\n        break;\n      default:\n        // code\n    }\n    return (\n      //get the to and from names\n      // eslint-disable-next-line\n      <Map style={window.MAP_STYLE_DEFAULT} containerStyle={{height: '100vh',width: '100vw'}} center={INITIAL_CENTER} zoom={INITIAL_ZOOM} onMoveStart={this.props.hideCountryPopups} onMoveEnd={this.props.showCountryPopups} onStyleLoad={this.styleLoaded.bind(this)}>\n        {/*sources for vector tiles*/}\n        <Source id={window.SRC_FROM_POLYGONS} tileJsonSource={{type: \"vector\", attribution: this.props.attribution, tiles: [ TILES_PREFIX + \"wdpa_\" + _from + \"_polygons\" + TILES_SUFFIX]}}/>\n        <Source id={window.SRC_FROM_POINTS} tileJsonSource={{type: \"vector\", tiles: [ TILES_PREFIX + \"wdpa_\" + _from + \"_points\" + TILES_SUFFIX]}}/>\n        <Source id={window.SRC_TO_POLYGONS} tileJsonSource={{type: \"vector\", tiles: [ TILES_PREFIX + \"wdpa_\" + _to + \"_polygons\" + TILES_SUFFIX]}}/>\n        <Source id={window.SRC_TO_POINTS} tileJsonSource={{type: \"vector\", tiles: [ TILES_PREFIX + \"wdpa_\" + _to + \"_points\" + TILES_SUFFIX]}}/> \n        {countryPopups}\n      </Map>\n    );\n  }\n}\n\nexport default MyMap;","import React from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nclass Changed extends React.Component {\n\trenderFrom(row){\n\t\treturn <div title={row.original.previous}>{row.original.previous}</div>;        \n\t}\n\trenderTo(row){\n\t\treturn <div title={row.original.current}>{row.original.current}</div>;        \n\t}\n\trender() {\n\t\tlet status = this.props.statuses.find(item => {return (this.props.changedData.geometryData === item.key)});\n\t\treturn (\n\t\t    (this.props.changedData && ((this.props.changedData.attributesData && this.props.changedData.attributesData.length>0) || (this.props.changedData.geometryData))) ?\n\t\t    <React.Fragment>\n\t\t    \t{(this.props.changedData.attributesData && this.props.changedData.attributesData.length>0) ? \n\t\t    \t<React.Fragment>\n\t    \t\t    <div className={'paPopupChangeType'}>The attributes have changed:</div>\n\t        \t\t<ReactTable \n\t                    className={'changeTable'}\n\t                    showPagination={false} \n\t                    minRows={0}\n\t                    data={this.props.changedData.attributesData}\n\t                    columns={[{ Header: 'Attribute', accessor: 'attribute',headerStyle: { 'textAlign': 'left' }}, { Header: this.props.fromVersion.title, accessor: 'previous',headerStyle: { 'textAlign': 'left' }, Cell: this.renderFrom.bind(this)}, { Header: this.props.toVersion.title, accessor: 'current',headerStyle: { 'textAlign': 'left' }, Cell: this.renderTo.bind(this)}]}\n\t        \t\t/> \n\t        \t</React.Fragment> : null}\n\t        \t{(this.props.changedData.geometryData) ? <div className={'geometryChangeDiv'}>{status && status.text}</div> : null}\n        \t</React.Fragment>\n    \t\t: null\n\t\t);\n\t}\n}\n\nexport default Changed;","import React from 'react';\nimport Changed from './Changed.js';\nimport Status from './Status.js';\nimport { getFeatureStatus } from './genericFunctions.js';\n\nconst TITLE_LINK = \"Click to open the protected area in the Protected Planet website\";\nconst URL_PP = \"https://www.protectedplanet.net/\";\n\nclass PAPopup extends React.Component {\n\tgetChangedData(feature){ //single feature under mouse\n\t\tlet attributesData =[];\n\t\tlet props = feature.properties;\n\t\t//check that the diff data has loaded\n\t\tif (this.props.country_pa_diffs.length === 0) return;\n\t\t//get the data for the feature under the mouse\n\t\tlet pa_data = this.props.country_pa_diffs.find(pa => pa.wdpaid === Number(props.wdpaid)); //wdpaid is BigDecimal in Geoserver by default and this gets parsed to a string type\n\t\t//get the previous version of the feature either from the points layer of the polygons layer\n\t\tlet previous_feature;\n\t\tif (pa_data.geometry_change && pa_data.geometry_change === \"point to polygon\"){\n\t\t\tprevious_feature = this.props.map.querySourceFeatures(window.SRC_FROM_POINTS, {sourceLayer: \"wdpa_\" + pa_data.from + \"_points\", filter: [\"==\", \"wdpaid\", props.wdpaid]})[0];\n\t\t}else{\n\t\t\tprevious_feature = this.props.map.querySourceFeatures(window.SRC_FROM_POLYGONS, {sourceLayer: \"wdpa_\" + pa_data.from + \"_polygons\", filter: [\"==\", \"wdpaid\", props.wdpaid]})[0];\n\t\t}\n\t\t//attributes have changed - make an array of the data\n\t\tif (pa_data.attribute_change){\n\t\t\tpa_data.attribute_change.forEach((attribute) => {\n\t\t\t\tif (previous_feature){\n\t\t\t\t\tattributesData.push({attribute: attribute, previous: previous_feature.properties[attribute], current: props[attribute]});\n\t\t\t\t}else{\n\t\t\t\t\tattributesData.push({attribute: attribute, previous: 'unable to find feature', current: props[attribute]});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn {attributesData: attributesData, geometryData: pa_data.geometry_change};\n\t}\n\trender() {\n\t\tif (this.props.dataForPopup === undefined) return null;\n\t\tlet left = this.props.dataForPopup.point.x + 35 + 'px';\n\t\tlet top = this.props.dataForPopup.point.y - 25 + 'px';\n\t\tlet feature = this.props.dataForPopup.features[0];\n\t\tlet children, status=\"\", link;\n\t\tlink = <span className={\"ppLink underline\"}><a href={URL_PP + feature.properties.wdpaid} target='_blank'  rel=\"noopener noreferrer\" title={TITLE_LINK}>{feature.properties.wdpaid}</a></span>;\n\t\tstatus = getFeatureStatus(feature);\n\t\tswitch (status) {\n\t\t\tcase \"changed\":\n\t\t\t\tlet changedData = this.getChangedData(feature);\n\t\t\t\tchildren = <Changed statuses={this.props.statuses} changedData={changedData} fromVersion={this.props.fromVersion} toVersion={this.props.toVersion}/>;\n\t\t\t\tbreak;\n\t\t\tcase \"added\":\n\t\t\t\tchildren = <div className={'paPopupChangeType'}>Added in {this.props.toVersion.title}</div>;\n\t\t\t\tbreak;\n\t\t\tcase \"removed\":\n\t\t\t\tchildren = <div className={'paPopupChangeType'}>Removed in {this.props.toVersion.title}</div>;\n\t\t\t\tlink = <span className={\"ppLink\"}></span>;\n\t\t\t\tbreak;\n\t\t\tcase \"no_change\":\n\t\t\t\tchildren = <div className={'paPopupChangeType'}>No change</div>;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t//code\n\t\t}\n\t\treturn (\n\t\t\t<div style={{'left': left,'top':top}} id=\"popup\" className={'PAPopup'} onMouseEnter={this.props.onMouseEnterPAPopup} onMouseLeave={this.props.onMouseLeavePAPopup}>\n\t\t\t\t<div className={'wdpaPopup'}>\n\t\t\t\t\t<div className=\"paPopupName\"><Status status={status}/><span className={\"paPopupNameLeft\"}>{feature.properties.name}</span>{link}</div>\n\t\t\t\t\t<div className={'paPopupContent'}>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PAPopup;","import React from 'react';\nimport { getFeatureStatus } from './genericFunctions.js';\nimport Status from './Status.js';\n\nclass PAPopupList extends React.Component {\n\trender() {\n\t\tif (this.props.dataForPopupList === undefined) return null;\n\t\tlet children = [], status = \"\";\n\t\tlet left = this.props.dataForPopupList.point.x + 15 + 'px';\n\t\tlet top = this.props.dataForPopupList.point.y - 15 + 'px';\n\t\tchildren = this.props.dataForPopupList.features.map((feature) => {\n\t\t\tstatus = getFeatureStatus(feature);\n\t\t\treturn <tr className={'wdpaPopupListItem'} key={feature.properties.wdpaid} onMouseEnter={this.props.showPAPopup.bind(this, feature)}><td><Status status={status}/></td><td>{feature.properties.wdpaid}</td><td>{feature.properties.name} ({feature.properties.iucn_cat})</td></tr>;\n\t\t});\n\t\tchildren = <table><tbody>{children}</tbody></table>;\n\t\treturn (\n\t\t\t<div style={{'left': left,'top':top}} id=\"popup\" className={'PAPopupList'} onMouseEnter={this.props.onMouseEnterPAPopuplist} onMouseLeave={this.props.onMouseLeavePAPopuplist}>\n\t\t\t\t<div className={'wdpaPopup'}>\n\t\t\t\t\t<div className={'paPopupName'}>{this.props.dataForPopupList.features.length} overlapping sites:</div>\n\t\t\t\t\t<div className={'paPopupContent'}>{children}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PAPopupList;","import React from 'react';\nimport Slider from '@material-ui/core/Slider';\n\n\nclass AppBar extends React.Component {\n    constructor(props){\n        super(props);\n        //get the selected version\n        let selectedVersion = props.versions.find(version => version.hasOwnProperty(\"selected\")).id;\n        this.state = {value: selectedVersion, showChanges: false}; \n    }\n    handleChange(event, newValue) {\n        this.setState({value: newValue});\n        this.props.setVersion(newValue);\n    }\n    handleShowChangesChange(event) {\n        this.setState({showChanges: !this.state.showChanges});\n        this.props.setShowChanges(!this.state.showChanges);\n    }\n    render() {\n        let marks = this.props.versions.map((version, index) =>{\n            return {value: version.id, label: version.shortTitle};\n        });\n        return (\n            <React.Fragment>\n                <div className={'appBar'}>\n                    <div>\n                        <div className={'appBarTitle'}>World Database on Protected Areas | Diff Checker</div>\n                        <div className={'appBarContent'}>\n                            {/*<div className={'fromVersion'}>{this.props.fromVersion&&this.props.fromVersion.title}</div>\n                            <div className={'toVersion'}>{this.props.toVersion&&this.props.toVersion.title}</div>*/}\n                            <div className={\"sliderContainer\"}>\n                                <Slider\n                                    min={marks[0].id}\n                                    max={marks.length-1}\n                                    value={this.state.value}\n                                    onChangeCommitted={this.handleChange.bind(this)}\n                                    valueLabelDisplay=\"off\"\n                                    marks={marks}\n                                />\n                            </div>\n                            <div className={'showChangesDiv'}>\n                                <input className={'showChangesCheckbox'} id={\"showChangesCheckbox\"} type=\"checkbox\" defaultChecked={this.state.showChanges} onChange={this.handleShowChangesChange.bind(this)}/>\n                                <label for={\"showChangesCheckbox\"}>Show changes</label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default AppBar;\n","import React from 'react';\n\nclass StatusCheckbox extends React.Component {\n    handleStatusChange(e){\n        this.props.handleStatusChange(this.props.status);\n    }\n    render() {\n        return (\n            <div className={'statusCheckboxContainer'}>\n                <input className={'statusCheckbox'} id={this.props.status.key + 'id'} type=\"checkbox\" defaultChecked={this.props.status.visible} onChange={this.handleStatusChange.bind(this)}/>\n                <label for={this.props.status.key + 'id'}>{this.props.status.short_text}</label>\n            </div>\n        );\n    }\n}\n\nexport default StatusCheckbox;\n","import React from 'react';\nimport StatusCheckbox from './StatusCheckbox.js';\n\nclass FooterBar extends React.Component {\n    handleStatusChange(status) {\n        this.props.handleStatusChange(status);\n    }\n    render() {\n        let children = this.props.statuses.map(item=>{\n            return (item.present) ? <StatusCheckbox status={item} handleStatusChange={this.handleStatusChange.bind(this)} key={item.key}/> : null;\n        });\n        return (\n            <React.Fragment>\n                <div className={'footerBar'} style={{display: (this.props.view === 'country') ? 'flex' : 'none'}}>\n                    <div className={'footerBarTitle'}>Changes</div>\n                    <div className={'footerBarContent'}>\n                        <div style={{display: 'block'}}>\n                            {children}\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default FooterBar;\n","import React from 'react';\nimport './App.css';\nimport jsonp from 'jsonp-promise';\nimport geojson from './countries.json';\nimport MyMap from './MyMap.js';\nimport PAPopup from './PAPopup.js';\nimport PAPopupList from './PAPopupList.js';\nimport parse from 'color-parse';\nimport AppBar from './AppBar.js';\nimport FooterBar from './FooterBar.js';\n\n// const REST_BASE_URL = \"https://61c92e42cb1042699911c485c38d52ae.vfs.cloud9.eu-west-1.amazonaws.com/python-rest-server/pythonrestserver/services/\";\nconst REST_BASE_URL = \"https://dopa-services.jrc.ec.europa.eu/services/marxan_vt/services/\";\nconst USE_SELECTION_COLOR = false; //set to true to disable the selection using the color of the polygon - it will use the P_SELECTION_ colors in MyMap.js\n//defines which layers will be highlighted when the mouse moves over the source layer - each layer in the highlight layers will be highlighted using the paint properties from the paintPropertyFrom layer\nlet hightlightRules = [\n  {sourceLayer: window.LYR_TO_NEW_POLYGON, highlightLayers: [{ layer: window.LYR_TO_SELECTED_POLYGON, paintPropertyFrom: window.LYR_TO_NEW_POLYGON}]},\n  {sourceLayer: window.LYR_TO_NEW_POINT, highlightLayers: [{ layer: window.LYR_TO_SELECTED_POINT, paintPropertyFrom: window.LYR_TO_NEW_POINT}]},\n  {sourceLayer: window.LYR_FROM_DELETED_POLYGON, highlightLayers: [{layer: window.LYR_FROM_SELECTED_POLYGON, paintPropertyFrom: window.LYR_FROM_DELETED_POLYGON}]},\n  {sourceLayer: window.LYR_FROM_DELETED_POINT, highlightLayers: [{ layer: window.LYR_FROM_SELECTED_POINT, paintPropertyFrom: window.LYR_FROM_DELETED_POINT}]},\n  {sourceLayer: window.LYR_TO_CHANGED_ATTRIBUTE, highlightLayers: [{layer: window.LYR_TO_SELECTED_POLYGON, paintPropertyFrom: window.LYR_TO_CHANGED_ATTRIBUTE}]},\n  {sourceLayer: window.LYR_TO_GEOMETRY_POINT_TO_POLYGON, highlightLayers: [{layer: window.LYR_FROM_SELECTED_POINT, paintPropertyFrom: window.LYR_FROM_GEOMETRY_POINT_TO_POLYGON},{layer: window.LYR_TO_SELECTED_POLYGON, paintPropertyFrom: window.LYR_TO_GEOMETRY_POINT_TO_POLYGON},{layer: window.LYR_TO_SELECTED_LINE, paintPropertyFrom: window.LYR_TO_GEOMETRY_POINT_TO_POLYGON_LINE}]},\n  {sourceLayer: window.LYR_TO_GEOMETRY_POINT_COUNT_CHANGED_POLYGON, highlightLayers: [{layer: window.LYR_FROM_SELECTED_LINE, paintPropertyFrom: window.LYR_FROM_GEOMETRY_POINT_COUNT_CHANGED_LINE},{layer: window.LYR_TO_SELECTED_POLYGON, paintPropertyFrom: window.LYR_TO_GEOMETRY_POINT_TO_POLYGON},{layer: window.LYR_TO_SELECTED_LINE, paintPropertyFrom: window.LYR_TO_GEOMETRY_POINT_TO_POLYGON_LINE}]},\n  {sourceLayer: window.LYR_TO_GEOMETRY_SHIFTED_POLYGON, highlightLayers: [{layer: window.LYR_FROM_SELECTED_LINE, paintPropertyFrom: window.LYR_FROM_GEOMETRY_POINT_COUNT_CHANGED_LINE},{layer: window.LYR_TO_SELECTED_POLYGON, paintPropertyFrom: window.LYR_TO_GEOMETRY_POINT_TO_POLYGON},{layer: window.LYR_TO_SELECTED_LINE, paintPropertyFrom: window.LYR_TO_GEOMETRY_POINT_TO_POLYGON_LINE}]},\n  {sourceLayer: window.LYR_TO_POLYGON, highlightLayers: [{ layer: window.LYR_TO_SELECTED_POLYGON, paintPropertyFrom: window.LYR_TO_POLYGON},{ layer: window.LYR_FROM_SELECTED_POINT, paintPropertyFrom: window.LYR_FROM_GEOMETRY_POINT_TO_POLYGON}]},\n  {sourceLayer: window.LYR_TO_POINT, highlightLayers: [{ layer: window.LYR_TO_SELECTED_POINT, paintPropertyFrom: window.LYR_TO_POINT}]}\n];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      global_summary: [],\n      country_summary: [],\n      country_pa_diffs: [],\n      showStatuses: ['added','removed'], \n      view: 'global',\n      statuses: [\n        {key:\"added\", text:\"Added\", short_text:\"Added\", present: false, visible: true, layers:[window.LYR_TO_NEW_POLYGON, window.LYR_TO_NEW_POINT]},\n        {key:\"removed\", text:\"Removed\", short_text:\"Removed\", present: false, visible: true, layers:[window.LYR_FROM_DELETED_POLYGON, window.LYR_FROM_DELETED_POINT]},\n        {key:\"changed\", text:\"Attribute\", short_text:\"Attribute\", present: false, visible: true, layers:[window.LYR_TO_CHANGED_ATTRIBUTE]},\n        {key:\"point_to_polygon\", text:\"The geometry has changed from a point to a polygon\", short_text:\"Geometry: pt -> poly\", present: false, visible: true, layers:[window.LYR_FROM_GEOMETRY_POINT_TO_POLYGON,window.LYR_TO_GEOMETRY_POINT_TO_POLYGON,window.LYR_TO_GEOMETRY_POINT_TO_POLYGON_LINE]},\n        {key:\"point_count_changed\", text:\"The geometry has been modified\", short_text:\"Geometry: changed\", present: false, visible: true, layers:[window.LYR_FROM_GEOMETRY_POINT_COUNT_CHANGED_LINE,window.LYR_TO_GEOMETRY_POINT_COUNT_CHANGED_POLYGON,window.LYR_TO_GEOMETRY_POINT_COUNT_CHANGED_POLYGON_LINE]},\n        {key:\"geometry_shifted\", text:\"The geometry has moved\", short_text:\"Geometry: moved\", present: false, visible: true, layers:[window.LYR_FROM_GEOMETRY_SHIFTED_LINE,window.LYR_TO_GEOMETRY_SHIFTED_POLYGON,window.LYR_TO_GEOMETRY_SHIFTED_POLYGON_LINE]},\n        {key:\"no_change\", text:\"No change\", short_text:\"No change\", present: false, visible: true, layers:[window.LYR_TO_POLYGON, window.LYR_TO_POINT]},\n        ], \n      versions:  [{id:0, title: \"August 2019\"},{id:1, title: \"September 2019\", selected: true},{id:2, title:\"October 2019\"}],\n      showChanges: false\n    };\n    this.mouseOverPAPopup = false;\n    this.mouseOverPAPopuplist = false;\n    this.PAPopuptimer = []; \n    this.PAPopupListtimer = [];\n    this.wdpaidsUnderMouse = [];\n  }\n  componentDidMount() {\n    //get the abbreviated version data\n    let _versions = this.state.versions.map(version => {\n      return Object.assign(version, {abbreviated: version.title.toLowerCase().substr(0,3) + \"_\" + version.title.slice(-4), shortTitle: version.title.substr(0,3) + \" \" + version.title.slice(-2)});\n    });\n    let selectedVersion = _versions.find(version => version.hasOwnProperty(\"selected\")).id;\n    this.setState({versions: _versions}, () => {\n      //set the version\n      this.setState({fromVersion: this.state.versions[selectedVersion-1], toVersion: this.state.versions[selectedVersion]},() => {\n        this.versionChanged();\n      });\n    });\n  }\n  //get a pointer to the mapbox gl map\n  setMap(map){\n    this.map = map;\n    //add event handlers to the map\n    this.map.on(\"mousemove\", this.mouseMove.bind(this));\n    //set the version\n    this.versionChanged();\n  }\n  versionChanged(){\n    if (this.state.showChanges){\n      //get the global diff summary\n      this.getGlobalSummary().then(() => {\n        //filter the countries for those that have diff data\n        this.getVisibleCountries();\n      });\n    }else{\n      //change the vector tiles and map them\n      if (this.map) this.hideChanges();\n    }\n  }\n  hideChanges(){\n    this.setState({global_summary: []});  \n  }\n  getAbbreviatedVersion(fullVersion){\n    return fullVersion.toLowerCase().substr(0,3) + \"_\" + fullVersion.slice(-4);\n  }\n  //makes a GET request and returns a promise which will either be resolved (passing the response) or rejected (passing the error)\n  _get(url, params) {\n    return new Promise((resolve, reject) => {\n      //set the global loading flag\n      jsonp(url).promise.then((response) => {\n        resolve(response);\n      }, (err) => {\n        reject(err);\n      });\n    });\n  }\n  //rest request to get the global diff summary\n  getGlobalSummary() {\n    return new Promise((resolve, reject) => {\n      let countryData;\n      //get the country reference data from the cached geojson data\n      let countriesJson = JSON.parse(JSON.stringify(geojson));\n      //get the country statistics in this version\n      this._get(REST_BASE_URL + \"get_wdpa_diff_global_summary?version=\" + this.state.toVersion.id + \"&format=json\").then(response => {\n        let global_summary_all = response.records.map(country => {\n          //find the matching item from the countries.json array\n          countryData = countriesJson.features.find(feature => feature.properties.iso3 === country.iso3);\n          //merge the two objects\n          return (countryData) ? Object.assign(country, countryData.properties, { \"centroid\": countryData.geometry.coordinates }) : null;\n        });\n        //filter out the nulls\n        this.global_summary_all = global_summary_all.filter((item) => !(item === null));\n        resolve(\"GlobalSummaryRetrieved\");\n      });\n    });\n  }\n  //returns true if the country has protected areas with the passed status\n  isCountryVisible(status, country){\n    return (this.state.showStatuses.indexOf(status)!==-1)&&(country[status] > 0); \n  }\n  //filters the global summary for only the countries that need to be shown based on the statuses that the user wants to see\n  getVisibleCountries(){\n    if (this.global_summary_all === undefined) return;\n    //iterate through the countries and get only the ones that will be shown\n    let global_summary = this.global_summary_all.filter((country) => {\n      return (this.isCountryVisible('added', country) || this.isCountryVisible('removed', country) || this.isCountryVisible('changed', country));\n    });\n    //set the state - this creates the country popups on the map\n    this.setState({global_summary: global_summary});\n  }\n  showCountryPopups() {\n    if (this.state.view === 'global') this.getVisibleCountries();\n  }\n  hideCountryPopups() {\n    if (this.state.view === 'global') this.setState({ global_summary:[] });\n  }\n  //iterates through the country summary data and sets a flag in the status array if they are visible\n  setStatusPresence(records, iso3){\n    let _statuses = this.state.statuses;\n    let _presences = records.map(item=>{return item.status});\n    _statuses = _statuses.map(status => {\n      if (status.key !== \"no_change\"){\n        return Object.assign(status, {present: _presences.indexOf(status.key) !== -1});\n      }else{\n        //the no_change status is handled differently as we dont want to retrieve all wdpaids for a country which havent changed as this is lots of data, potentially, but we can get the no_change country statistics from the global summary\n        let global_summary_data = this.global_summary_all.find(item => { return item.iso3 === iso3});\n        let no_change_status = _statuses.find(item => item.key === 'no_change');\n        return Object.assign(no_change_status, {present: global_summary_data.no_change > 0});\n      }\n    });\n    this.setState({statuses: _statuses});\n  }\n  handleStatusChange(e){\n    let _statuses = this.state.statuses;\n    _statuses = _statuses.map(status => {\n      return Object.assign(status, {visible: (status.key === e.key) ? !status.visible : status.visible});\n    });\n    this.setState({statuses: _statuses});\n    //set the layer(s) visibility directly on the map (to avoid an update of the map state)  \n    e.layers.forEach(layer => {\n      this.map.setLayoutProperty(layer, \"visibility\", (e.visible) ? \"visible\" : \"none\" );\n    });\n  }\n  //fired when the user clicks on a country popup\n  clickCountryPopup(country) {\n    //set the bounds of the map\n    this.map.fitBounds([[country.west, country.south],[country.east,country.north]],{ padding: { top: 10, bottom: 10, left: 10, right: 10 }, easing: (num) => { return 1 }});\n    //hide the country popups\n    this.hideCountryPopups();\n    //set the view type\n    this.setState({view: \"country\"});\n    //get the country diff summary\n    this._get(REST_BASE_URL + \"get_wdpa_diff_country_summary?version=\" + this.state.toVersion.id + \"&format=json&iso3=\" + country.iso3).then(response => {\n      //set the visibility of the statuses in the statuses array\n      this.setStatusPresence(response.records, country.iso3);\n      this.setState({country_summary: response.records});\n    });\n    //get the individual changes in the protected areas\n    this._get(REST_BASE_URL + \"get_wdpa_diff_country_diffs?version=\" + this.state.toVersion.id + \"&format=json&iso3=\" + country.iso3).then(response => {\n      if (response.records.length>0) this.setState({country_pa_diffs: response.records});\n    });\n  }\n  //gets the features under the cursor \n  mouseMove(e){\n    var features = this.map.queryRenderedFeatures(e.point,{layers: [window.LYR_FROM_DELETED_POLYGON, window.LYR_FROM_DELETED_POINT,window.LYR_TO_POLYGON, window.LYR_TO_POINT,window.LYR_TO_CHANGED_ATTRIBUTE, window.LYR_TO_GEOMETRY_POINT_TO_POLYGON,window.LYR_TO_GEOMETRY_POINT_COUNT_CHANGED_POLYGON,window.LYR_TO_GEOMETRY_SHIFTED_POLYGON,window.LYR_TO_NEW_POLYGON,window.LYR_TO_NEW_POINT]});\n    if (features.length>0) {\n      //remove any duplicate features (at the boundary between vector tiles there may be duplicates so remove them)\n      features = this.removeDuplicateFeatures(features, \"wdpaid\");\n      //get the unique wdpaids values \n      let wdpaids = features.map(feature => feature.properties.wdpaid);\n      //compare the wdpas with the previous features under the mouse to see if there are any differences\n      if (!this.arraysAreTheSame(wdpaids,this.wdpaidsUnderMouse)){\n        this.onMouseEnter({point: e.point, features: features});\n        this.wdpaidsUnderMouse = wdpaids;\n      }\n    }else{\n      //no features under the cursor\n      this.clearPopups();\n    }\n  }\n  //gets unique features from an array of features based on the key property\n  removeDuplicateFeatures(arr, key){\n    let uniqueValues =[], uniqueFeatures = [];\n\t\tarr.forEach(feature=>{\n\t\t\tif (uniqueValues.indexOf(feature.properties[key]) === -1){\n\t\t\t\tuniqueFeatures.push(feature);\n\t\t\t\tuniqueValues.push(feature.properties[key]);\n\t\t\t}\n\t\t});\n    return uniqueFeatures;\n  }\n  //compares two arrays to see if they are the same\n  arraysAreTheSame(arr1, arr2){\n    //compare using a simple string conversion\n    return (arr1.join(\"\") === arr2.join(\"\")) ? true : false;\n  }\n  onMouseEnter(e){\n    if (this.state.view === 'global') return;\n    //if only one feature - show the PAPopup\n    if (e.features.length === 1) {\n      this.closePAPopuplist(0);\n      //clear any timers to close the PAPopup\n      this.PAPopuptimer.forEach(timer=>{ clearTimeout(timer)});\n      this.showPAPopup(e);\n    }else{ //show the PAPopuplist\n      this.closePAPopup(0);\n      //clear any timers to close the PAPopupList\n      this.PAPopupListtimer.forEach(timer=>{ clearTimeout(timer)});\n      this.showPAPopuplist(e);\n    }\n  }\n  clearPopups(){\n    //reset the local variable that has the wdpaids\n    this.wdpaidsUnderMouse = [];\n    //the PAPopupList is currently shown and we dont want to close it\n    if (this.state.dataForPopup && this.state.dataForPopup.features && this.state.dataForPopup.features.length >1) return; \n    //deselect features immediately \n    this.deselectFeatures();\n    //close the PAPopup\n    this.closePAPopup(400);\n  }\n  showPAPopup(e){\n    //highlight the feature\n    this.highlightFeature(e.features[0]);\n    //set the data for the popup\n    this.setState({dataForPopup:e});\n  }\n  showPAPopuplist(e){\n    //set the data for the popuplist\n    this.setState({dataForPopupList:e});\n  }\n  showPAPopupFromList(feature,  e){\n    this.showPAPopup({features:[feature], point:{x: e.clientX + 50, y: e.clientY}});\n  }\n  closePAPopup(ms){\n    //wait for a bit before closing the popup - the user may want to interact with it\n    this.PAPopuptimer.push(setTimeout(()=>{\n      if (!this.mouseOverPAPopup) this.setState({dataForPopup: undefined});\n    }, ms));  \n  }\n  closePAPopuplist(ms){\n    this.PAPopupListtimer.push(setTimeout(()=>{\n      if (!this.mouseOverPAPopuplist) this.setState({dataForPopupList: undefined});\n    }, ms));            \n  }\n  onMouseEnterPAPopup(e){\n    this.mouseOverPAPopup = true;\n  }\n  onMouseLeavePAPopup(e){\n    this.mouseOverPAPopup = false;\n    //close the PAPopup\n    this.closePAPopup(0);\n  }\n  onMouseEnterPAPopuplist(e){\n    this.mouseOverPAPopuplist = true;\n  }\n  onMouseLeavePAPopuplist(e){\n    this.mouseOverPAPopuplist = false;\n    //close the PAPopup\n    this.closePAPopuplist(0);\n  }\n  highlightFeature(feature){\n    //reset the selected layers\n    this.deselectFeatures();\n    //get the rule for the layer  \n    let rule = hightlightRules.find(_rule => _rule.sourceLayer === feature.layer.id);\n    //iterate through the layers that need to be highlighted\n    rule.highlightLayers.forEach((item) => {\n      //set the filter on the highlightLayers\n      this.map.setFilter(item.layer, ['==','wdpaid', feature.properties.wdpaid]);\n      //increase the opacity\n      if (!USE_SELECTION_COLOR) this.increaseOpacity(item.paintPropertyFrom, item.layer);\n    });\n  }\n  //deselects all features \n  deselectFeatures(){\n    this.map.setFilter(window.LYR_FROM_SELECTED_POINT, ['==','wdpaid', '-1']);              \n    this.map.setFilter(window.LYR_FROM_SELECTED_LINE, ['==','wdpaid', '-1']);              \n    this.map.setFilter(window.LYR_FROM_SELECTED_POLYGON, ['==','wdpaid', '-1']);              \n    this.map.setFilter(window.LYR_TO_SELECTED_POINT, ['==','wdpaid', '-1']);              \n    this.map.setFilter(window.LYR_TO_SELECTED_LINE, ['==','wdpaid', '-1']);              \n    this.map.setFilter(window.LYR_TO_SELECTED_POLYGON, ['==','wdpaid', '-1']);\n    //reset the selection color in the LYR_TO_SELECTED_POLYGON layer - too slow fades in slowly\n    // this.map.setPaintProperty(window.LYR_TO_SELECTED_POLYGON, \"fill-color\", \"rgba(0,0,0,0)\");\n  }\n  //gets the paint property from the passed source layer, clones it into the target layer but with an increase in opacity\n  increaseOpacity(sourceLayer, targetLayer, increaseBy = 0.1){\n    //get the paint property of the source layer\n    let paint = this.getPaintProperty(sourceLayer);\n    //iterate through the paint properties of the source layer and copy them to the target layer\n    Object.keys(paint).forEach(key=>{\n      let newValue = paint[key];\n      //increase the opacity in any rgba values\n      if ((typeof(paint[key]) === \"string\") && paint[key].indexOf(\"rgba\") !== -1){\n        let rgba = parse(paint[key]);\n        newValue = \"rgba(\" + rgba.values[0] + \",\" + rgba.values[1] + \",\" + rgba.values[2] + \",\" + this.getNewOpacity(rgba.alpha, increaseBy) + \")\";\n      }\n      //increase the opacity if the key contains the word opacity\n      if (key.indexOf(\"opacity\") !== -1) newValue = this.getNewOpacity(paint[key],increaseBy);\n      //dont change the fill outline opacity if the source layer is a changed geometry polygon - the fill outline should remain invisible as it will be shown in the geometry changed line layer\n      if (!((key === \"fill-outline-color\") && (sourceLayer === window.LYR_TO_GEOMETRY_POINT_TO_POLYGON || sourceLayer ===  window.LYR_TO_GEOMETRY_POINT_COUNT_CHANGED_POLYGON || sourceLayer === window.LYR_TO_GEOMETRY_SHIFTED_POLYGON))) this.map.setPaintProperty(targetLayer, key, newValue);\n    });\n  }\n  getNewOpacity(value, increaseBy){\n    return ((value + increaseBy)>1) ? 1 : value + increaseBy;\n  }\n  getPaintProperty(layerid){\n    let style = this.map.getStyle();\n    let layer = style.layers.find(layer => { return layer.id === layerid});\n    return layer.paint;\n  }\n\n  showAllNoChanges(_show){\n    let statuses = (_show) ? ['added','removed','changed'] : [];\n    this.showChanges(statuses);\n  }\n  showChangesWithStatus(status, _show){\n    let statuses = this.state.showStatuses;\n    if (_show){\n      statuses.push(status);  \n    }else{\n      statuses.pop(status);\n    }\n    this.showChanges(statuses);\n  }\n  showChanges(statuses){\n    this.setState({showStatuses: statuses},() =>{\n      this.getVisibleCountries();  \n    });\n  }\n  setVersion(version){\n    this.setState({fromVersion: this.state.versions[version-1], toVersion: this.state.versions[version]},() => {\n      this.versionChanged();\n    });\n  }\n  setShowChanges(value){\n    this.setState({showChanges:value},() => {\n      this.versionChanged();\n    });\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <MyMap \n          fromVersion={this.state.fromVersion} \n          toVersion={this.state.toVersion}\n          global_summary={this.state.global_summary}\n          country_summary={this.state.country_summary}\n          hideCountryPopups={this.hideCountryPopups.bind(this)}\n          showCountryPopups={this.showCountryPopups.bind(this)}\n          setMap={this.setMap.bind(this)}\n          showStatuses={this.state.showStatuses}\n          statuses={this.state.statuses}\n          clickCountryPopup={this.clickCountryPopup.bind(this)}\n          view={this.state.view}\n          attribution={\"IUCN and UNEP-WCMC (2019), The World Database on Protected Areas (WDPA) August, 2019, Cambridge, UK: UNEP-WCMC. Available at: <a href='http://www.protectedplanet.net'>www.protectedplanet.net</a>\"}\n        />\n        <PAPopupList dataForPopupList={this.state.dataForPopupList} country_pa_diffs={this.state.country_pa_diffs} map={this.map} showPAPopup={this.showPAPopupFromList.bind(this)} onMouseEnterPAPopuplist={this.onMouseEnterPAPopuplist.bind(this)} onMouseLeavePAPopuplist={this.onMouseLeavePAPopuplist.bind(this)}/> \n        <PAPopup statuses={this.state.statuses} dataForPopup={this.state.dataForPopup} country_pa_diffs={this.state.country_pa_diffs} map={this.map} fromVersion={this.state.fromVersion} toVersion={this.state.toVersion} onMouseEnterPAPopup={this.onMouseEnterPAPopup.bind(this)} onMouseLeavePAPopup={this.onMouseLeavePAPopup.bind(this)}/>\n        <AppBar setVersion={this.setVersion.bind(this)} versions={this.state.versions} version={this.state.toVersion} setShowChanges={this.setShowChanges.bind(this)}/>\n        <FooterBar view={this.state.view} statuses={this.state.statuses} handleStatusChange={this.handleStatusChange.bind(this)}/>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}