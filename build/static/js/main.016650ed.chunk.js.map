{"version":3,"sources":["Status.js","CountryPopup.js","MyMap.js","Changed.js","PAPopup.js","PAPopupList.js","AppBar.js","StatusCheckbox.js","FooterBar.js","App.js","serviceWorker.js","index.js"],"names":["Status","classname","this","props","status","text","className","React","Component","CountryPopup","clickCountryPopup","country","coordinates","centroid","title","name","onClick","bind","length","substr","style","display","showStatuses","indexOf","new","deleted","changed","Map","ReactMapboxGl","accessToken","INITIAL_CENTER","INITIAL_ZOOM","TILES_PREFIX","TILES_SUFFIX","P_FROM_GEOMETRY_SHIFTED_LINE","P_FROM_GEOMETRY_POINT_COUNT_CHANGED_LINE","P_FROM_GEOMETRY_POINT_TO_POLYGON","P_FROM_DELETED_POLYGON","P_FROM_DELETED_POINT","P_TO_CHANGED_ATTRIBUTE","P_TO_CHANGED_GEOMETRY","P_TO_CHANGED_GEOMETRY_LINE","P_TO_NEW_POLYGON","P_TO_NEW_POINT","P_TO_POLYGON","P_TO_POINT","P_SELECTED_POINT","P_SELECTED_LINE","P_SELECTED_POLYGON","MyMap","state","nextProps","nextState","JSON","stringify","undefined","toVersion","fromVersion","countryPopups","toFilter","_from","abbreviated","_to","toPointsFilter","newPAs","deletedPAs","changedPAs","geometryShiftedPAs","geometryPointCountChangedPAs","geometryPointToPolygonPAs","geometryChangedPAs","view","iso3s","global_summary","map","push","iso3","key","concat","visibleLayers","statuses","visible","country_summary","forEach","record","wdpaids","filter","item","includes","window","MAP_STYLE_DEFAULT","containerStyle","height","width","center","zoom","onMoveStart","hideCountryPopups","onMoveEnd","showCountryPopups","Consumer","setMap","id","SRC_FROM_POLYGONS","tileJsonSource","type","attribution","tiles","SRC_FROM_POINTS","SRC_TO_POLYGONS","SRC_TO_POINTS","sourceId","LYR_FROM_DELETED_POLYGON","sourceLayer","layout","visibility","paint","onMouseEnter","onMouseLeave","LYR_FROM_DELETED_POINT","LYR_TO_POLYGON","LYR_TO_POINT","LYR_TO_CHANGED_ATTRIBUTE","LYR_FROM_GEOMETRY_POINT_TO_POLYGON","LYR_FROM_GEOMETRY_POINT_COUNT_CHANGED_LINE","LYR_FROM_GEOMETRY_SHIFTED_LINE","LYR_TO_GEOMETRY_POINT_TO_POLYGON","LYR_TO_GEOMETRY_POINT_TO_POLYGON_LINE","LYR_TO_GEOMETRY_POINT_COUNT_CHANGED_POLYGON","LYR_TO_GEOMETRY_POINT_COUNT_CHANGED_POLYGON_LINE","LYR_TO_GEOMETRY_SHIFTED_POLYGON","LYR_TO_GEOMETRY_SHIFTED_POLYGON_LINE","LYR_TO_NEW_POLYGON","LYR_TO_NEW_POINT","LYR_FROM_SELECTED_POINT","LYR_FROM_SELECTED_LINE","LYR_FROM_SELECTED_POLYGON","LYR_TO_SELECTED_POINT","LYR_TO_SELECTED_LINE","LYR_TO_SELECTED_POLYGON","Changed","row","original","previous","current","find","changedData","geometryData","attributesData","Fragment","showPagination","minRows","data","columns","Header","accessor","headerStyle","Cell","renderFrom","renderTo","PAPopup","feature","properties","country_pa_diffs","previous_feature","pa_data","pa","wdpaid","Number","geometry_change","querySourceFeatures","attribute_change","attribute","dataForPopup","children","left","point","x","top","y","features","layer","getChangedData","onMouseEnterPAPopup","onMouseLeavePAPopup","href","target","rel","PAPopupList","dataForPopupList","showPAPopup","iucn_cat","onMouseEnterPAPopuplist","onMouseLeavePAPopuplist","AppBar","StatusCheckbox","e","handleStatusChange","defaultChecked","onChange","for","short_text","FooterBar","visibleCount","present","REST_BASE_URL","versions","hightlightRules","highlightLayers","paintPropertyFrom","App","layers","mouseOverPAPopup","mouseOverPAPopuplist","version","Object","assign","toLowerCase","slice","setState","getGlobalSummary","then","getVisibleCountries","fullVersion","url","params","Promise","resolve","reject","jsonp","promise","response","err","countryData","countriesJson","parse","geojson","_get","global_summary_all","records","geometry","isCountryVisible","_statuses","_presences","setLayoutProperty","fitBounds","west","south","east","north","padding","bottom","right","easing","num","setStatusPresence","showPAPopuplist","deselectFeatures","closePAPopup","highlightFeature","screenX","screenY","ms","PAPopuptimer","setTimeout","PAPopupListtimer","closePAPopuplist","_rule","setFilter","increaseOpacity","targetLayer","increaseBy","getPaintProperty","keys","newValue","rgba","values","alpha","setPaintProperty","layerid","getStyle","_show","showChanges","pop","clearTimeout","showPAPopupFromList","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.016650ed.chunk.js","sourcesContent":["import React from 'react';\n\nclass Status extends React.Component {\n\trender() {\n\t    let classname = \"stat \" + this.props.status;\n\t    let text=\"\";\n\t    switch (this.props.status) {\n\t        case 'new':\n\t            text = \"++\";\n\t            break;\n\t        case 'deleted':\n\t            text = \"--\";\n\t            break;\n\t        case 'changed':\n\t            text = \"\"; //≠\n\t            break;\n\t        default:\n\t            // code\n\t    }\n\t\treturn (\n\t\t    <span className={classname}>{text}</span>\n\t\t);\n\t}\n}\n\nexport default Status;","import React from 'react';\nimport { Popup } from 'react-mapbox-gl';\nimport Status from './Status.js';\n\nclass CountryPopup extends React.Component {\n    clickCountryPopup(){\n      this.props.clickCountryPopup(this.props.country);\n    }\n    render() {\n        return (\n            <Popup coordinates={this.props.country.centroid} className={'countryPopup'}>\n              <div title={\"View details for \" + this.props.country.name} onClick={this.clickCountryPopup.bind(this)}>\n                <div className={'name'}>{(this.props.country.name.length > 40) ? (this.props.country.name.substr(0,30) + '...') : this.props.country.name}</div>\n                <div className={'stats'}>\n                  <div className={''} style={{display: ((this.props.showStatuses.indexOf('new') !==-1)&&this.props.country.new) ? 'inline' : 'none'}} title={this.props.country.new + ' protected areas added'}>{this.props.country.new}<Status status={'new'}/></div>\n                  <div className={''} style={{display: ((this.props.showStatuses.indexOf('deleted') !==-1)&&this.props.country.deleted) ? 'inline' : 'none'}} title={this.props.country.deleted + ' protected areas removed'}>{this.props.country.deleted}<Status status={'deleted'}/></div>\n                  <div className={''} style={{display: ((this.props.showStatuses.indexOf('changed') !==-1)&&this.props.country.changed) ? 'inline' : 'none'}} title={this.props.country.changed + ' changed protected areas'}>{this.props.country.changed}<Status status={'changed'}/></div>\n                </div>\n              </div>\n            </Popup>\n        );\n    }\n}\n\nexport default CountryPopup;\n","import React from 'react';\nimport ReactMapboxGl, { Layer, Source, MapContext  } from 'react-mapbox-gl';\nimport CountryPopup from './CountryPopup.js';\n\nconst Map = ReactMapboxGl({\n  accessToken: \"pk.eyJ1IjoiYmxpc2h0ZW4iLCJhIjoiMEZrNzFqRSJ9.0QBRA2HxTb8YHErUFRMPZg\"\n});\n\n// const INITIAL_CENTER = [-175.15, -21.15]; \nconst INITIAL_CENTER = [0, 0];\nconst INITIAL_ZOOM = [2];\nconst TILES_PREFIX = \"https://geospatial.jrc.ec.europa.eu/geoserver/gwc/service/wmts?layer=marxan:\";\nconst TILES_SUFFIX = \"&tilematrixset=EPSG:900913&Service=WMTS&Request=GetTile&Version=1.0.0&Format=application/x-protobuf;type=mapbox-vector&TileMatrix=EPSG:900913:{z}&TileCol={x}&TileRow={y}\";\n//paint properties\nconst P_FROM_GEOMETRY_SHIFTED_LINE = { \"line-color\": \"rgb(99,148,69)\", \"line-width\": 1, \"line-opacity\": 0.6, \"line-dasharray\": [3,3]};\nconst P_FROM_GEOMETRY_POINT_COUNT_CHANGED_LINE = { \"line-color\": \"rgb(99,148,69)\", \"line-width\": 1, \"line-opacity\": 0.6, \"line-dasharray\": [3,3]};\nconst P_FROM_GEOMETRY_POINT_TO_POLYGON = {\"circle-radius\": 5, \"circle-color\": \"rgba(99,148,69,0.6)\"};\nconst P_FROM_DELETED_POLYGON = { \"fill-color\": \"rgba(255,0,0, 0.2)\", \"fill-outline-color\": \"rgba(255,0,0,0.5)\"};\nconst P_FROM_DELETED_POINT = {\"circle-radius\": 5, \"circle-color\": \"rgb(255,0,0)\", \"circle-opacity\": 0.6};\nconst P_TO_CHANGED_ATTRIBUTE = { \"fill-color\": \"rgba(99,148,69,0.4)\", \"fill-outline-color\": \"rgba(99,148,69,0.8)\"};\nconst P_TO_CHANGED_GEOMETRY = { \"fill-color\": \"rgba(99,148,69,0.2)\", \"fill-outline-color\": \"rgba(0,0,0,0)\"};\nconst P_TO_CHANGED_GEOMETRY_LINE = { \"line-color\": \"rgb(99,148,69)\", \"line-width\": 2, \"line-opacity\": 0.6, \"line-dasharray\": [3,3]};\nconst P_TO_NEW_POLYGON = { \"fill-color\": \"rgba(63,127,191,0.2)\", \"fill-outline-color\": \"rgba(63,127,191,0.6)\"};\nconst P_TO_NEW_POINT = {\"circle-radius\": 10, \"circle-color\": \"rgb(63,127,191)\", \"circle-opacity\": 0.6};\nconst P_TO_POLYGON = { \"fill-color\": \"rgba(99,148,69,0.2)\", \"fill-outline-color\": \"rgba(99,148,69,0.3)\"};\nconst P_TO_POINT = {\"circle-radius\": 5, \"circle-color\": \"rgb(99,148,69)\", \"circle-opacity\": 0};\nconst P_SELECTED_POINT = {\"circle-radius\": 5, \"circle-color\": \"rgb(255,0,0)\", \"circle-opacity\": 1};\nconst P_SELECTED_LINE = { \"line-color\": \"rgb(255,0,0)\", \"line-width\": 2, \"line-opacity\": 0};\nconst P_SELECTED_POLYGON = { \"fill-color\": \"rgba(255,0,0,0)\", \"fill-outline-color\": \"rgba(255,0,0,0)\"};\n\nclass MyMap extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n    };\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    //this is a crude hack to compare properties -TODO SORT THIS OUT\n    return (JSON.stringify(this.props) !== JSON.stringify(nextProps))||(JSON.stringify(this.state) !== JSON.stringify(nextState)); \n  }\t\n  clickCountryPopup(country){\n    //set the currently selected country\n    this.country = country;\n    this.props.clickCountryPopup(country);\n  }\n  render() {\n    if ((this.props.toVersion === undefined)||(this.props.fromVersion === undefined)) return null;\n    //get the from and to versions in abbreviated form to get the vector tiles\n    let _from = this.props.fromVersion.abbreviated;\n    let _to = this.props.toVersion.abbreviated;\n    let countryPopups, toFilter, toPointsFilter = [], newPAs=[], deletedPAs=[], changedPAs=[], geometryShiftedPAs=[], geometryPointCountChangedPAs= [], geometryPointToPolygonPAs = [], geometryChangedPAs =[];\n    switch (this.props.view) {\n      case 'global':\n        //get the country popups\n        let iso3s = [];\n        countryPopups = this.props.global_summary.map(country => {\n          iso3s.push(country.iso3);\n          return <CountryPopup country={country} key={country.iso3} showStatuses={this.props.showStatuses} clickCountryPopup={this.clickCountryPopup.bind(this)}/>;\n        });\n        //filter the toLayer  to only the countries that are being shown\n        toFilter = ['in', 'iso3'].concat(iso3s);\n        //filter out all points at the global scale view\n        toPointsFilter = ['in', 'iso3',''];\n        break;\n      case 'country':\n        //get the layers to show\n        let visibleLayers = this.props.statuses.map(status => {return (status.visible) ? status.key : null});\n        //get the stats data for the country\n        this.props.country_summary.forEach(record => {\n          switch (record.status) {\n            case 'new':\n              if (visibleLayers.indexOf(\"new\") !== -1) newPAs = record.wdpaids;\n              break;\n            case 'deleted':\n              if (visibleLayers.indexOf(\"deleted\") !== -1) deletedPAs = record.wdpaids;\n              break;\n            case 'changed':\n              if (visibleLayers.indexOf(\"changed\") !== -1) changedPAs = record.wdpaids;\n              break;\n            case 'geometry shifted':\n              if (visibleLayers.indexOf(\"changed\") !== -1) geometryShiftedPAs = record.wdpaids;\n              break;\n            case 'point count':\n              if (visibleLayers.indexOf(\"changed\") !== -1) geometryPointCountChangedPAs = record.wdpaids;\n              break;\n            case 'point to polygon':\n              if (visibleLayers.indexOf(\"changed\") !== -1) geometryPointToPolygonPAs = record.wdpaids;\n              break;\n            default:\n              // code\n            }\n        });\n        //get the array of all protected areas that have changed geometries\n        geometryChangedPAs = geometryShiftedPAs.concat(geometryPointCountChangedPAs).concat(geometryPointToPolygonPAs);\n        //the toLayer should exclude all of the other protected areas that are changed, new or have their geometry shifted\n        toFilter = ['all', ['!in', 'wdpaid'].concat(changedPAs).concat(newPAs).concat(geometryChangedPAs),['in', 'iso3', this.country.iso3]];\n        //the toPoints layer should exclude all new point PAs (which will be shown in blue)\n        toPointsFilter = ['all', ['!in', 'wdpaid'].concat(newPAs),['in', 'iso3', this.country.iso3]];        \n        //the changed layer should exclude all of the other protected areas that have had their geometry changed - these will be rendered with dashed outlines\n        changedPAs = changedPAs.filter(item => !geometryChangedPAs.includes(item));\n        break;\n      default:\n        // code\n    }\n    return (\n      //get the to and from names\n      // eslint-disable-next-line\n      <Map style={window.MAP_STYLE_DEFAULT} containerStyle={{height: '100vh',width: '100vw'}} center={INITIAL_CENTER} zoom={INITIAL_ZOOM} onMoveStart={this.props.hideCountryPopups} onMoveEnd={this.props.showCountryPopups}>\n        <MapContext.Consumer>\n          {(map) => {\n            this.props.setMap(map);\n          }}\n        </MapContext.Consumer>\n        {/*sources for vector tiles*/}\n        <Source id={window.SRC_FROM_POLYGONS} tileJsonSource={{type: \"vector\", attribution: this.props.attribution, tiles: [ TILES_PREFIX + \"wdpa_\" + _from + \"_polygons\" + TILES_SUFFIX]}}/>\n        <Source id={window.SRC_FROM_POINTS} tileJsonSource={{type: \"vector\", tiles: [ TILES_PREFIX + \"wdpa_\" + _from + \"_points\" + TILES_SUFFIX]}}/>\n        <Source id={window.SRC_TO_POLYGONS} tileJsonSource={{type: \"vector\", tiles: [ TILES_PREFIX + \"wdpa_\" + _to + \"_polygons\" + TILES_SUFFIX]}}/>\n        <Source id={window.SRC_TO_POINTS} tileJsonSource={{type: \"vector\", tiles: [ TILES_PREFIX + \"wdpa_\" + _to + \"_points\" + TILES_SUFFIX]}}/> \n        {/*deleted layers*/}\n        <Layer sourceId={window.SRC_FROM_POLYGONS} id={window.LYR_FROM_DELETED_POLYGON} type=\"fill\" sourceLayer={\"wdpa_\" + _from + \"_polygons\"} layout={{visibility: \"visible\"}} paint={P_FROM_DELETED_POLYGON} filter={['in', 'wdpaid'].concat(deletedPAs)} onMouseEnter={this.props.onMouseEnter} onMouseLeave={this.props.onMouseLeave}/>\n        <Layer sourceId={window.SRC_FROM_POINTS} id={window.LYR_FROM_DELETED_POINT} type=\"circle\" sourceLayer={\"wdpa_\" + _from + \"_points\"} layout={{visibility: \"visible\"}} filter={['in', 'wdpaid'].concat(deletedPAs)} paint={P_FROM_DELETED_POINT} onMouseEnter={this.props.onMouseEnter} onMouseLeave={this.props.onMouseLeave}/>\n        {/*no change layers*/}\n        <Layer sourceId={window.SRC_TO_POLYGONS} id={window.LYR_TO_POLYGON} type=\"fill\" sourceLayer={\"wdpa_\" + _to + \"_polygons\"} layout={{visibility: \"visible\"}} paint={P_TO_POLYGON} filter={toFilter} onMouseEnter={this.props.onMouseEnter} onMouseLeave={this.props.onMouseLeave}/>\n        <Layer sourceId={window.SRC_TO_POINTS} id={window.LYR_TO_POINT} type=\"circle\" sourceLayer={\"wdpa_\" + _to + \"_points\"} layout={{visibility: \"visible\"}} paint={P_TO_POINT} filter={toPointsFilter} onMouseEnter={this.props.onMouseEnter} onMouseLeave={this.props.onMouseLeave}/>\n        {/*attribute change layers*/}\n        <Layer sourceId={window.SRC_TO_POLYGONS} id={window.LYR_TO_CHANGED_ATTRIBUTE} type=\"fill\" sourceLayer={\"wdpa_\" + _to + \"_polygons\"} layout={{visibility: \"visible\"}} paint={P_TO_CHANGED_ATTRIBUTE} filter={['in', 'wdpaid'].concat(changedPAs)} onMouseEnter={this.props.onMouseEnter} onMouseLeave={this.props.onMouseLeave}/>\n        {/*geometry change layers - from*/}\n        <Layer sourceId={window.SRC_FROM_POINTS} id={window.LYR_FROM_GEOMETRY_POINT_TO_POLYGON} type=\"circle\" sourceLayer={\"wdpa_\" + _from + \"_points\"} layout={{visibility: \"visible\"}} filter={['in', 'wdpaid'].concat(geometryPointToPolygonPAs)} paint={P_FROM_GEOMETRY_POINT_TO_POLYGON}/>\n        <Layer sourceId={window.SRC_FROM_POLYGONS} id={window.LYR_FROM_GEOMETRY_POINT_COUNT_CHANGED_LINE} type=\"line\" sourceLayer={\"wdpa_\" + _from + \"_polygons\"} layout={{visibility: \"visible\"}} filter={['in', 'wdpaid'].concat(geometryPointCountChangedPAs)} paint={P_FROM_GEOMETRY_POINT_COUNT_CHANGED_LINE}/>\n        <Layer sourceId={window.SRC_FROM_POLYGONS} id={window.LYR_FROM_GEOMETRY_SHIFTED_LINE} type=\"line\" sourceLayer={\"wdpa_\" + _from + \"_polygons\"} layout={{visibility: \"visible\"}} filter={['in', 'wdpaid'].concat(geometryShiftedPAs)} paint={P_FROM_GEOMETRY_SHIFTED_LINE}/>\n        {/*geometry change layers - to*/}\n        <Layer sourceId={window.SRC_TO_POLYGONS} id={window.LYR_TO_GEOMETRY_POINT_TO_POLYGON} type=\"fill\" sourceLayer={\"wdpa_\" + _to + \"_polygons\"} layout={{visibility: \"visible\"}} paint={P_TO_CHANGED_GEOMETRY} filter={['in', 'wdpaid'].concat(geometryPointToPolygonPAs)} onMouseEnter={this.props.onMouseEnter} onMouseLeave={this.props.onMouseLeave}/>\n        <Layer sourceId={window.SRC_TO_POLYGONS} id={window.LYR_TO_GEOMETRY_POINT_TO_POLYGON_LINE} type=\"line\" sourceLayer={\"wdpa_\" + _to + \"_polygons\"} layout={{visibility: \"visible\"}} paint={P_TO_CHANGED_GEOMETRY_LINE} filter={['in', 'wdpaid'].concat(geometryPointToPolygonPAs)}/>\n        <Layer sourceId={window.SRC_TO_POLYGONS} id={window.LYR_TO_GEOMETRY_POINT_COUNT_CHANGED_POLYGON} type=\"fill\" sourceLayer={\"wdpa_\" + _to + \"_polygons\"} layout={{visibility: \"visible\"}} paint={P_TO_CHANGED_GEOMETRY} filter={['in', 'wdpaid'].concat(geometryPointCountChangedPAs)} onMouseEnter={this.props.onMouseEnter} onMouseLeave={this.props.onMouseLeave}/>\n        <Layer sourceId={window.SRC_TO_POLYGONS} id={window.LYR_TO_GEOMETRY_POINT_COUNT_CHANGED_POLYGON_LINE} type=\"line\" sourceLayer={\"wdpa_\" + _to + \"_polygons\"} layout={{visibility: \"visible\"}} paint={P_TO_CHANGED_GEOMETRY_LINE} filter={['in', 'wdpaid'].concat(geometryPointCountChangedPAs)}/>\n        <Layer sourceId={window.SRC_TO_POLYGONS} id={window.LYR_TO_GEOMETRY_SHIFTED_POLYGON} type=\"fill\" sourceLayer={\"wdpa_\" + _to + \"_polygons\"} layout={{visibility: \"visible\"}} paint={P_TO_CHANGED_GEOMETRY} filter={['in', 'wdpaid'].concat(geometryShiftedPAs)} onMouseEnter={this.props.onMouseEnter} onMouseLeave={this.props.onMouseLeave}/>\n        <Layer sourceId={window.SRC_TO_POLYGONS} id={window.LYR_TO_GEOMETRY_SHIFTED_POLYGON_LINE} type=\"line\" sourceLayer={\"wdpa_\" + _to + \"_polygons\"} layout={{visibility: \"visible\"}} paint={P_TO_CHANGED_GEOMETRY_LINE} filter={['in', 'wdpaid'].concat(geometryShiftedPAs)}/>\n        {/*new layers*/}\n        <Layer sourceId={window.SRC_TO_POLYGONS} id={window.LYR_TO_NEW_POLYGON} type=\"fill\" sourceLayer={\"wdpa_\" + _to + \"_polygons\"} layout={{visibility: \"visible\"}} paint={P_TO_NEW_POLYGON} filter={['in', 'wdpaid'].concat(newPAs)} onMouseEnter={this.props.onMouseEnter} onMouseLeave={this.props.onMouseLeave}/>\n        <Layer sourceId={window.SRC_TO_POINTS} id={window.LYR_TO_NEW_POINT} type=\"circle\" sourceLayer={\"wdpa_\" + _to + \"_points\"} layout={{visibility: \"visible\"}} paint={P_TO_NEW_POINT} filter={['in', 'wdpaid'].concat(newPAs)} onMouseEnter={this.props.onMouseEnter} onMouseLeave={this.props.onMouseLeave}/>\n        {/*selection layers*/}\n        <Layer sourceId={window.SRC_FROM_POINTS} id={window.LYR_FROM_SELECTED_POINT} type=\"circle\" sourceLayer={\"wdpa_\" + _from + \"_points\"} layout={{visibility: \"visible\"}} filter={['==', 'wdpaid','-1']} paint={P_SELECTED_POINT}/>\n        <Layer sourceId={window.SRC_FROM_POLYGONS} id={window.LYR_FROM_SELECTED_LINE} type=\"line\" sourceLayer={\"wdpa_\" + _from + \"_polygons\"} layout={{visibility: \"visible\"}} filter={['==','wdpaid','-1']} paint={P_SELECTED_LINE}/>\n        <Layer sourceId={window.SRC_FROM_POLYGONS} id={window.LYR_FROM_SELECTED_POLYGON} type=\"fill\" sourceLayer={\"wdpa_\" + _from + \"_polygons\"} layout={{visibility: \"visible\"}} filter={['==','wdpaid','-1']} paint={P_SELECTED_POLYGON}/>\n        <Layer sourceId={window.SRC_TO_POINTS} id={window.LYR_TO_SELECTED_POINT} type=\"circle\" sourceLayer={\"wdpa_\" + _to + \"_points\"} layout={{visibility: \"visible\"}} filter={['==', 'wdpaid','-1']} paint={P_SELECTED_POINT}/>\n        <Layer sourceId={window.SRC_TO_POLYGONS} id={window.LYR_TO_SELECTED_LINE} type=\"line\" sourceLayer={\"wdpa_\" + _to + \"_polygons\"} layout={{visibility: \"visible\"}} paint={P_SELECTED_LINE} filter={['==', 'wdpaid','-1']}/>\n        <Layer sourceId={window.SRC_TO_POLYGONS} id={window.LYR_TO_SELECTED_POLYGON} type=\"fill\" sourceLayer={\"wdpa_\" + _to + \"_polygons\"} layout={{visibility: \"visible\"}} paint={P_SELECTED_POLYGON} filter={['==', 'wdpaid','-1']}/>\n        {countryPopups}\n      </Map>\n    );\n  }\n}\n\nexport default MyMap;","import React from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nclass Changed extends React.Component {\n\trenderFrom(row){\n\t\treturn <div title={row.original.previous}>{row.original.previous}</div>;        \n\t}\n\trenderTo(row){\n\t\treturn <div title={row.original.current}>{row.original.current}</div>;        \n\t}\n\trender() {\n\t\tlet status = this.props.statuses.find(item => {return (this.props.changedData.geometryData === item.key)});\n\t\treturn (\n\t\t    (this.props.changedData && ((this.props.changedData.attributesData && this.props.changedData.attributesData.length>0) || (this.props.changedData.geometryData))) ?\n\t\t    <React.Fragment>\n\t\t    \t{(this.props.changedData.attributesData && this.props.changedData.attributesData.length>0) ? \n\t\t    \t<React.Fragment>\n\t    \t\t    <div className={'paPopupChangeType'}>The attributes have changed:</div>\n\t        \t\t<ReactTable \n\t                    className={'changeTable'}\n\t                    showPagination={false} \n\t                    minRows={0}\n\t                    data={this.props.changedData.attributesData}\n\t                    columns={[{ Header: 'Attribute', accessor: 'attribute',headerStyle: { 'textAlign': 'left' }}, { Header: this.props.fromVersion.title, accessor: 'previous',headerStyle: { 'textAlign': 'left' }, Cell: this.renderFrom.bind(this)}, { Header: this.props.toVersion.title, accessor: 'current',headerStyle: { 'textAlign': 'left' }, Cell: this.renderTo.bind(this)}]}\n\t        \t\t/> \n\t        \t</React.Fragment> : null}\n\t        \t{(this.props.changedData.geometryData) ? <div className={'geometryChangeDiv'}>{status && status.text}</div> : null}\n        \t</React.Fragment>\n    \t\t: null\n\t\t);\n\t}\n}\n\nexport default Changed;","import React from 'react';\nimport Changed from './Changed.js';\nimport Status from './Status.js';\n\nconst TITLE_LINK = \"Click to open the protected area in the Protected Planet website\";\nconst URL_PP = \"https://www.protectedplanet.net/\";\n\nclass PAPopup extends React.Component {\n\tgetChangedData(feature){ //single feature under mouse\n\t\tlet attributesData =[];\n\t\tlet props = feature.properties;\n\t\t//check that the diff data has loaded\n\t\tif (this.props.country_pa_diffs.length === 0) return;\n\t\t//get the data for the feature under the mouse\n\t\tlet pa_data = this.props.country_pa_diffs.find(pa => pa.wdpaid === Number(props.wdpaid)); //wdpaid is BigDecimal in Geoserver by default and this gets parsed to a string type\n\t\t//get the previous version of the feature either from the points layer of the polygons layer\n\t\tlet previous_feature;\n\t\tif (pa_data.geometry_change && pa_data.geometry_change === \"point to polygon\"){\n\t\t\tprevious_feature = this.props.map.querySourceFeatures(window.SRC_FROM_POINTS, {sourceLayer: \"wdpa_aug_2019_points\", filter: [\"==\", \"wdpaid\", props.wdpaid]})[0];\n\t\t}else{\n\t\t\tprevious_feature = this.props.map.querySourceFeatures(window.SRC_FROM_POLYGONS, {sourceLayer: \"wdpa_aug_2019_polygons\", filter: [\"==\", \"wdpaid\", props.wdpaid]})[0];\n\t\t}\n\t\t//attributes have changed - make an array of the data\n\t\tif (pa_data.attribute_change){\n\t\t\tpa_data.attribute_change.forEach((attribute) => {\n\t\t\t\tif (previous_feature){\n\t\t\t\t\tattributesData.push({attribute: attribute, previous: previous_feature.properties[attribute], current: props[attribute]});\n\t\t\t\t}else{\n\t\t\t\t\tattributesData.push({attribute: attribute, previous: 'unable to find feature', current: props[attribute]});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn {attributesData: attributesData, geometryData: pa_data.geometry_change};\n\t}\n\trender() {\n\t\tif (this.props.dataForPopup === undefined) return null;\n\t\tlet left = this.props.dataForPopup.point.x + 35 + 'px';\n\t\tlet top = this.props.dataForPopup.point.y - 25 + 'px';\n\t\tlet feature = this.props.dataForPopup.features[0];\n\t\tlet children, status=\"\";\n\t\tswitch (feature.layer.id) {\n\t\t\tcase window.LYR_TO_CHANGED_ATTRIBUTE:\n\t\t\tcase window.LYR_TO_GEOMETRY_POINT_TO_POLYGON:\n\t\t\tcase window.LYR_TO_GEOMETRY_POINT_COUNT_CHANGED_POLYGON:\n\t\t\tcase window.LYR_TO_GEOMETRY_SHIFTED_POLYGON:\n\t\t\t\tlet changedData = this.getChangedData(feature);\n\t\t\t\tchildren = <Changed statuses={this.props.statuses} changedData={changedData} fromVersion={this.props.fromVersion.abbreviated} toVersion={this.props.toVersion.abbreviated}/>;\n\t\t\t\tstatus = \"changed\";\n\t\t\t\tbreak;\n\t\t\tcase window.LYR_TO_NEW_POLYGON:\n\t\t\tcase window.LYR_TO_NEW_POINT:\n\t\t\t\tchildren = <div className={'paPopupChangeType'}>This protected area was added in {this.props.toVersion.title}</div>;\n\t\t\t\tstatus = \"new\";\n\t\t\t\tbreak;\n\t\t\tcase window.LYR_FROM_DELETED_POLYGON:\n\t\t\tcase window.LYR_FROM_DELETED_POINT:\n\t\t\t\tchildren = <div className={'paPopupChangeType'}>This protected area was removed in {this.props.toVersion.title}</div>;\n\t\t\t\tstatus = \"deleted\";\n\t\t\t\tbreak;\n\t\t\tcase window.LYR_TO_POLYGON:\n\t\t\tcase window.LYR_TO_POINT:\n\t\t\t\tchildren = <div className={'paPopupChangeType'}>No change</div>;\n\t\t\t\tstatus = \"no change\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t//code\n\t\t}\n\t\treturn (\n\t\t\t<div style={{'left': left,'top':top}} id=\"popup\" onMouseEnter={this.props.onMouseEnterPAPopup} onMouseLeave={this.props.onMouseLeavePAPopup}>\n\t\t\t\t<div className={'wdpaPopup'}>\n\t\t\t\t\t<div className=\"paPopupName\"><Status status={status}/><span className={\"paPopupNameLeft\"}>{feature.properties.name}</span><span className={\"paPopupNameRight\"}><a href={URL_PP + feature.properties.wdpaid} target='_blank'  rel=\"noopener noreferrer\" title={TITLE_LINK}>{feature.properties.wdpaid}</a></span></div>\n\t\t\t\t\t<div className={'paPopupContent'}>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PAPopup;","import React from 'react';\nclass PAPopupList extends React.Component {\n\t\n\trender() {\n\t\tif (this.props.dataForPopupList === undefined) return null;\n\t\tlet children = [];\n\t\tlet left = this.props.dataForPopupList.point.x + 25 + 'px';\n\t\tlet top = this.props.dataForPopupList.point.y - 25 + 'px';\n\t\tchildren = this.props.dataForPopupList.features.map((feature) => {\n\t\t\treturn <tr className={'wdpaPopupListItem'} key={feature.properties.wdpaid} onMouseEnter={this.props.showPAPopup.bind(this, feature)}><td>{feature.properties.wdpaid}</td><td>{feature.properties.name} ({feature.properties.iucn_cat})</td></tr>;\n\t\t});\n\t\tchildren = <table><tbody>{children}</tbody></table>;\n\t\treturn (\n\t\t\t<div style={{'left': left,'top':top}} id=\"popup\" onMouseEnter={this.props.onMouseEnterPAPopuplist} onMouseLeave={this.props.onMouseLeavePAPopuplist}>\n\t\t\t\t<div className={'wdpaPopup'}>\n\t\t\t\t\t<div className={'paPopupName'}>{this.props.dataForPopupList.features.length} overlapping sites:</div>\n\t\t\t\t\t<div className={'paPopupContent'}>{children}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PAPopupList;","import React from 'react';\n\nclass AppBar extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className={'appBar'}>\n                    <div>\n                        <div className={'appBarTitle'}>World Database on Protected Areas | Diff Checker</div>\n                        <div className={'appBarContent'}>\n                            <div className={'fromVersion'}>{this.props.fromVersion&&this.props.fromVersion.title}</div>\n                            <div className={'toVersion'}>{this.props.toVersion&&this.props.toVersion.title}</div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default AppBar;\n","import React from 'react';\n\nclass StatusCheckbox extends React.Component {\n    handleStatusChange(e){\n        this.props.handleStatusChange(this.props.status);\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <input id={this.props.status.key + 'id'} type=\"checkbox\" defaultChecked={this.props.status.visible} onChange={this.handleStatusChange.bind(this)}/>\n                <label for={this.props.status.key + 'id'}>{this.props.status.short_text}</label>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default StatusCheckbox;\n","import React from 'react';\nimport StatusCheckbox from './StatusCheckbox.js';\n\nclass FooterBar extends React.Component {\n    handleStatusChange(status) {\n        this.props.handleStatusChange(status);\n    }\n    render() {\n        let visibleCount = 0;\n        let children = this.props.statuses.map(item=>{\n            if (item.visible && item.present) visibleCount = visibleCount + 1;\n            return (item.present) ? <StatusCheckbox status={item} handleStatusChange={this.handleStatusChange.bind(this)} key={item.key}/> : null;\n        });\n        return (\n            <React.Fragment>\n                <div className={'footerBar'} style={{display: (visibleCount !== 0) ? 'flex' : 'none'}}>\n                    <div className={'footerBarTitle'}>Changes</div>\n                    <div className={'footerBarContent'}>\n                        <div style={{display: 'block'}}>\n                            {children}\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default FooterBar;\n","import React from 'react';\nimport './App.css';\nimport jsonp from 'jsonp-promise';\nimport geojson from './countries.json';\nimport MyMap from './MyMap.js';\nimport PAPopup from './PAPopup.js';\nimport PAPopupList from './PAPopupList.js';\nimport parse from 'color-parse';\nimport AppBar from './AppBar.js';\nimport FooterBar from './FooterBar.js';\n\nconst REST_BASE_URL = \"https://61c92e42cb1042699911c485c38d52ae.vfs.cloud9.eu-west-1.amazonaws.com/python-rest-server/pythonrestserver/services/\";\n// const REST_BASE_URL = \"https://rest-services.jrc.ec.europa.eu/services/marxan_vt/services/\";\nconst USE_SELECTION_COLOR = false; //set to true to disable the selection using the color of the polygon - it will use the P_SELECTION_ colors in MyMap.js\nlet versions = [{title: \"August 2019\"},{title: \"September 2019\"}];\n//defines which layers will be highlighted when the mouse moves over the source layer - each layer in the highlight layers will be highlighted using the paint properties from the paintPropertyFrom layer\nlet hightlightRules = [\n  {sourceLayer: window.LYR_TO_NEW_POLYGON, highlightLayers: [{ layer: window.LYR_TO_SELECTED_POLYGON, paintPropertyFrom: window.LYR_TO_NEW_POLYGON}]},\n  {sourceLayer: window.LYR_TO_NEW_POINT, highlightLayers: [{ layer: window.LYR_TO_SELECTED_POINT, paintPropertyFrom: window.LYR_TO_NEW_POINT}]},\n  {sourceLayer: window.LYR_FROM_DELETED_POLYGON, highlightLayers: [{layer: window.LYR_FROM_SELECTED_POLYGON, paintPropertyFrom: window.LYR_FROM_DELETED_POLYGON}]},\n  {sourceLayer: window.LYR_FROM_DELETED_POINT, highlightLayers: [{ layer: window.LYR_FROM_SELECTED_POINT, paintPropertyFrom: window.LYR_FROM_DELETED_POINT}]},\n  {sourceLayer: window.LYR_TO_CHANGED_ATTRIBUTE, highlightLayers: [{layer: window.LYR_TO_SELECTED_POLYGON, paintPropertyFrom: window.LYR_TO_CHANGED_ATTRIBUTE}]},\n  {sourceLayer: window.LYR_TO_GEOMETRY_POINT_TO_POLYGON, highlightLayers: [{layer: window.LYR_FROM_SELECTED_POINT, paintPropertyFrom: window.LYR_FROM_GEOMETRY_POINT_TO_POLYGON},{layer: window.LYR_TO_SELECTED_POLYGON, paintPropertyFrom: window.LYR_TO_GEOMETRY_POINT_TO_POLYGON},{layer: window.LYR_TO_SELECTED_LINE, paintPropertyFrom: window.LYR_TO_GEOMETRY_POINT_TO_POLYGON_LINE}]},\n  {sourceLayer: window.LYR_TO_GEOMETRY_POINT_COUNT_CHANGED_POLYGON, highlightLayers: [{layer: window.LYR_FROM_SELECTED_LINE, paintPropertyFrom: window.LYR_FROM_GEOMETRY_POINT_COUNT_CHANGED_LINE},{layer: window.LYR_TO_SELECTED_POLYGON, paintPropertyFrom: window.LYR_TO_GEOMETRY_POINT_TO_POLYGON},{layer: window.LYR_TO_SELECTED_LINE, paintPropertyFrom: window.LYR_TO_GEOMETRY_POINT_TO_POLYGON_LINE}]},\n  {sourceLayer: window.LYR_TO_GEOMETRY_SHIFTED_POLYGON, highlightLayers: [{layer: window.LYR_FROM_SELECTED_LINE, paintPropertyFrom: window.LYR_FROM_GEOMETRY_POINT_COUNT_CHANGED_LINE},{layer: window.LYR_TO_SELECTED_POLYGON, paintPropertyFrom: window.LYR_TO_GEOMETRY_POINT_TO_POLYGON},{layer: window.LYR_TO_SELECTED_LINE, paintPropertyFrom: window.LYR_TO_GEOMETRY_POINT_TO_POLYGON_LINE}]},\n  {sourceLayer: window.LYR_TO_POLYGON, highlightLayers: [{ layer: window.LYR_TO_SELECTED_POLYGON, paintPropertyFrom: window.LYR_TO_POLYGON},{ layer: window.LYR_FROM_SELECTED_POINT, paintPropertyFrom: window.LYR_FROM_GEOMETRY_POINT_TO_POLYGON}]},\n  {sourceLayer: window.LYR_TO_POINT, highlightLayers: [{ layer: window.LYR_TO_SELECTED_POINT, paintPropertyFrom: window.LYR_TO_POINT}]}\n];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      global_summary: [],\n      country_summary: [],\n      country_pa_diffs: [],\n      showStatuses: ['new','deleted'], \n      view: 'global',\n      statuses: [\n        {key:\"new\", text:\"Added\", short_text:\"Added\", present: false, visible: true, layers:[window.LYR_TO_NEW_POLYGON, window.LYR_TO_NEW_POINT]},\n        {key:\"deleted\", text:\"Removed\", short_text:\"Removed\", present: false, visible: true, layers:[window.LYR_FROM_DELETED_POLYGON, window.LYR_FROM_DELETED_POINT]},\n        {key:\"changed\", text:\"Attribute\", short_text:\"Attribute\", present: false, visible: true, layers:[window.LYR_TO_CHANGED_ATTRIBUTE]},\n        {key:\"point to polygon\", text:\"The geometry has changed from a point to a polygon\", short_text:\"Geometry: pt -> poly\", present: false, visible: true, layers:[window.LYR_FROM_GEOMETRY_POINT_TO_POLYGON,window.LYR_TO_GEOMETRY_POINT_TO_POLYGON,window.LYR_TO_GEOMETRY_POINT_TO_POLYGON_LINE]},\n        {key:\"point count\", text:\"The geometry has been modified\", short_text:\"Geometry: changed\", present: false, visible: true, layers:[window.LYR_FROM_GEOMETRY_POINT_COUNT_CHANGED_LINE,window.LYR_TO_GEOMETRY_POINT_COUNT_CHANGED_POLYGON,window.LYR_TO_GEOMETRY_POINT_COUNT_CHANGED_POLYGON_LINE]},\n        {key:\"geometry shifted\", text:\"The geometry has moved\", short_text:\"Geometry: moved\", present: false, visible: true, layers:[window.LYR_FROM_GEOMETRY_SHIFTED_LINE,window.LYR_TO_GEOMETRY_SHIFTED_POLYGON,window.LYR_TO_GEOMETRY_SHIFTED_POLYGON_LINE]},\n        ]\n    };\n    this.mouseOverPAPopup = false;\n    this.mouseOverPAPopuplist = false;\n  }\n  componentDidMount() {\n    //get the abbreviated version data\n    versions = versions.map(version => {\n      return Object.assign(version, {abbreviated: version.title.toLowerCase().substr(0,3) + \"_\" + version.title.slice(-4)});\n    });\n    //set the version\n    this.setState({fromVersion: versions[0], toVersion: versions[1]});\n    //get the global diff summary\n    this.getGlobalSummary().then(() => {\n      //filter the countries for those that have diff data\n      this.getVisibleCountries();\n    });\n  }\n  getAbbreviatedVersion(fullVersion){\n    return fullVersion.toLowerCase().substr(0,3) + \"_\" + fullVersion.slice(-4);\n  }\n  setMap(map){\n    this.map = map;\n  }\n  //makes a GET request and returns a promise which will either be resolved (passing the response) or rejected (passing the error)\n  _get(url, params) {\n    return new Promise((resolve, reject) => {\n      //set the global loading flag\n      jsonp(url).promise.then((response) => {\n        resolve(response);\n      }, (err) => {\n        reject(err);\n      });\n    });\n  }\n  //rest request to get the global diff summary\n  getGlobalSummary() {\n    return new Promise((resolve, reject) => {\n      let countryData;\n      //get the country reference data from the cached geojson data\n      let countriesJson = JSON.parse(JSON.stringify(geojson));\n      //get the countries that have changes in this version\n      this._get(REST_BASE_URL + \"get_wdpa_diff_global_summary?format=json\").then(response => {\n        let global_summary_all = response.records.map(country => {\n          //find the matching item from the countries.json array\n          countryData = countriesJson.features.find(feature => feature.properties.iso3 === country.iso3);\n          //merge the two objects\n          return (countryData) ? Object.assign(country, countryData.properties, { \"centroid\": countryData.geometry.coordinates }) : null;\n        });\n        //filter out the nulls\n        this.global_summary_all = global_summary_all.filter((item) => item !== null);\n        resolve(\"GlobalSummaryRetrieved\");\n      });\n    });\n  }\n  //returns true if the country has protected areas with the passed status\n  isCountryVisible(status, country){\n    return (this.state.showStatuses.indexOf(status)!==-1)&&(country[status] !== null); \n  }\n  //filters the global summary for only the countries that need to be shown\n  getVisibleCountries(){\n    //iterate through the countries and get only the ones that will be shown\n    let global_summary = this.global_summary_all.filter((country) => {\n      return (this.isCountryVisible('new', country) || this.isCountryVisible('deleted', country) || this.isCountryVisible('changed', country));\n    });\n    //set the state - this creates the country popups on the map\n    this.setState({global_summary: global_summary});\n  }\n  showCountryPopups() {\n    if (this.state.view === 'global') this.getVisibleCountries();\n  }\n  hideCountryPopups() {\n    if (this.state.view === 'global') this.setState({ global_summary:[] });\n  }\n  setStatusPresence(records){\n    let _statuses = this.state.statuses;\n    let _presences = records.map(item=>{return item.status});\n    _statuses = _statuses.map(status => {\n      return Object.assign(status, {present: _presences.indexOf(status.key) !== -1});\n    });\n    this.setState({statuses: _statuses});\n  }\n  handleStatusChange(e){\n    let _statuses = this.state.statuses;\n    _statuses = _statuses.map(status => {\n      return Object.assign(status, {visible: (status.key === e.key) ? !status.visible : status.visible});\n    });\n    this.setState({statuses: _statuses});\n    //set the layer(s) visibility directly on the map (to avoid an update of the map state)  \n    e.layers.forEach(layer => {\n      this.map.setLayoutProperty(layer, \"visibility\", (e.visible) ? \"visible\" : \"none\" );\n    });\n  }\n  //fired when the user clicks on a country popup\n  clickCountryPopup(country) {\n    //set the bounds of the map\n    this.map.fitBounds([[country.west, country.south],[country.east,country.north]],{ padding: { top: 10, bottom: 10, left: 10, right: 10 }, easing: (num) => { return 1 }});\n    //hide the country popups\n    this.hideCountryPopups();\n    //set the view type\n    this.setState({view: \"country\"});\n    //get the country diff summary\n    this._get(REST_BASE_URL + \"get_wdpa_diff_country_summary?format=json&iso3=\" + country.iso3).then(response => {\n      //set the visibility of the statuses in the statuses array\n      this.setStatusPresence(response.records);\n      this.setState({country_summary: response.records});\n    });\n    //get the individual changes in the protected areas\n    this._get(REST_BASE_URL + \"get_wdpa_diff_country_diffs?format=json&iso3=\" + country.iso3).then(response => {\n      if (response.records.length>0) this.setState({country_pa_diffs: response.records});\n    });\n  }\n  onMouseEnter(e){\n    if (this.state.view === 'global') return;\n    let wdpaids =[];\n\t\t//remove duplicate features\n\t\tlet features = e.features.map(feature=>{\n\t\t\tif (wdpaids.indexOf(feature.properties.wdpaid) === -1){\n\t\t\t\twdpaids.push(feature.properties.wdpaid);\n\t\t\t\treturn feature;\n\t\t\t}else{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\t\t//remove the nulls\n\t\tfeatures = features.filter((item) => item !== null);\n\t\t//set the features property back on the mouseEventData\n    Object.assign(e, {features: features});\n    //if only one feature - show the PAPopup\n    if (e.features.length === 1) {\n      this.showPAPopup(e);\n    }else{ //show the PAPopuplist\n      this.showPAPopuplist(e);\n    }\n  }\n  onMouseLeave(e){\n    //the PAPopupList is currently shown and we dont want to close it\n    if (this.state.dataForPopup && this.state.dataForPopup.features && this.state.dataForPopup.features.length >1) return; \n    //deselect features immediately unless the mouse is now over the PAPopup\n    this.deselectFeatures();\n    //close the PAPopup\n    this.closePAPopup(600);\n  }\n  showPAPopup(e){\n    //highlight the feature\n    this.highlightFeature(e.features[0]);\n    //set the data for the popup\n    this.setState({dataForPopup:e});\n  }\n  showPAPopuplist(e){\n    //set the data for the popuplist\n    this.setState({dataForPopupList:e});\n  }\n  showPAPopupFromList(feature,  e){\n    this.showPAPopup({features:[feature], point:{x: e.screenX, y: e.screenY}});\n  }\n  closePAPopup(ms){\n    //wait for a bit before closing the popup - the user may want to interact with it\n    this.PAPopuptimer = setTimeout(()=>{\n      if (!this.mouseOverPAPopup) this.setState({dataForPopup: undefined});\n    }, ms);            \n  }\n  closePAPopuplist(ms){\n    this.PAPopupListtimer = setTimeout(()=>{\n      if (!this.mouseOverPAPopuplist) this.setState({dataForPopupList: undefined});\n    }, ms);            \n  }\n  onMouseEnterPAPopup(e){\n    this.mouseOverPAPopup = true;\n  }\n  onMouseLeavePAPopup(e){\n    this.mouseOverPAPopup = false;\n    //close the PAPopup\n    this.closePAPopup(600);\n  }\n  onMouseEnterPAPopuplist(e){\n    this.mouseOverPAPopuplist = true;\n  }\n  onMouseLeavePAPopuplist(e){\n    this.mouseOverPAPopuplist = false;\n    //close the PAPopup\n    this.closePAPopuplist(0);\n  }\n  highlightFeature(feature){\n    //reset the selected layers\n    this.deselectFeatures();\n    //get the rule for the layer  \n    let rule = hightlightRules.find(_rule => _rule.sourceLayer === feature.layer.id);\n    //iterate through the layers that need to be highlighted\n    rule.highlightLayers.forEach((item) => {\n      //set the filter on the highlightLayers\n      this.map.setFilter(item.layer, ['==','wdpaid', feature.properties.wdpaid]);\n      //increase the opacity\n      if (!USE_SELECTION_COLOR) this.increaseOpacity(item.paintPropertyFrom, item.layer);\n    });\n  }\n  //deselects all features \n  deselectFeatures(){\n    this.map.setFilter(window.LYR_FROM_SELECTED_POINT, ['==','wdpaid', '-1']);              \n    this.map.setFilter(window.LYR_FROM_SELECTED_LINE, ['==','wdpaid', '-1']);              \n    this.map.setFilter(window.LYR_FROM_SELECTED_POLYGON, ['==','wdpaid', '-1']);              \n    this.map.setFilter(window.LYR_TO_SELECTED_POINT, ['==','wdpaid', '-1']);              \n    this.map.setFilter(window.LYR_TO_SELECTED_LINE, ['==','wdpaid', '-1']);              \n    this.map.setFilter(window.LYR_TO_SELECTED_POLYGON, ['==','wdpaid', '-1']);\n    //reset the selection color in the LYR_TO_SELECTED_POLYGON layer - too slow fades in slowly\n    // this.map.setPaintProperty(window.LYR_TO_SELECTED_POLYGON, \"fill-color\", \"rgba(0,0,0,0)\");\n  }\n  //gets the paint property from the passed source layer, clones it into the target layer but with an increase in opacity\n  increaseOpacity(sourceLayer, targetLayer, increaseBy = 0.1){\n    //get the paint property of the source layer\n    let paint = this.getPaintProperty(sourceLayer);\n    //iterate through the paint properties of the source layer and copy them to the target layer\n    Object.keys(paint).forEach(key=>{\n      let newValue = paint[key];\n      //increase the opacity in any rgba values\n      if ((typeof(paint[key]) === \"string\") && paint[key].indexOf(\"rgba\") !== -1){\n        let rgba = parse(paint[key]);\n        newValue = \"rgba(\" + rgba.values[0] + \",\" + rgba.values[1] + \",\" + rgba.values[2] + \",\" + (rgba.alpha + increaseBy) + \")\";\n      }\n      //increase the opacity if the key contains the word opacity\n      if (key.indexOf(\"opacity\") !== -1) newValue = (paint[key] + increaseBy);\n      this.map.setPaintProperty(targetLayer, key, newValue);\n    });\n    \n    // \n  }\n  getPaintProperty(layerid){\n      let style = this.map.getStyle();\n      let layer = style.layers.find(layer => { return layer.id === layerid});\n      return layer.paint;\n  }\n\n  showAllNoChanges(_show){\n    let statuses = (_show) ? ['new','deleted','changed'] : [];\n    this.showChanges(statuses);\n  }\n  showChangesWithStatus(status, _show){\n    let statuses = this.state.showStatuses;\n    if (_show){\n      statuses.push(status);  \n    }else{\n      statuses.pop(status);\n    }\n    this.showChanges(statuses);\n  }\n  showChanges(statuses){\n    this.setState({showStatuses: statuses},() =>{\n      this.getVisibleCountries();  \n    });\n  }\n  render() {\n    //clear any timers to close the PAPopup\n    clearTimeout(this.PAPopuptimer);\n    clearTimeout(this.PAPopupListtimer);\n    return (\n      <React.Fragment>\n        <MyMap \n          fromVersion={this.state.fromVersion} \n          toVersion={this.state.toVersion}\n          global_summary={this.state.global_summary}\n          country_summary={this.state.country_summary}\n          hideCountryPopups={this.hideCountryPopups.bind(this)}\n          showCountryPopups={this.showCountryPopups.bind(this)}\n          setMap={this.setMap.bind(this)}\n          showStatuses={this.state.showStatuses}\n          statuses={this.state.statuses}\n          clickCountryPopup={this.clickCountryPopup.bind(this)}\n          onMouseEnter={this.onMouseEnter.bind(this)}\n          onMouseLeave={this.onMouseLeave.bind(this)}\n          view={this.state.view}\n          attribution={\"IUCN and UNEP-WCMC (2019), The World Database on Protected Areas (WDPA) August, 2019, Cambridge, UK: UNEP-WCMC. Available at: <a href='http://www.protectedplanet.net'>www.protectedplanet.net</a>\"}\n        />\n        <PAPopupList dataForPopupList={this.state.dataForPopupList} country_pa_diffs={this.state.country_pa_diffs} map={this.map} showPAPopup={this.showPAPopupFromList.bind(this)} onMouseEnterPAPopuplist={this.onMouseEnterPAPopuplist.bind(this)} onMouseLeavePAPopuplist={this.onMouseLeavePAPopuplist.bind(this)}/> \n        <PAPopup statuses={this.state.statuses} dataForPopup={this.state.dataForPopup} country_pa_diffs={this.state.country_pa_diffs} map={this.map} fromVersion={this.state.fromVersion} toVersion={this.state.toVersion} onMouseEnterPAPopup={this.onMouseEnterPAPopup.bind(this)} onMouseLeavePAPopup={this.onMouseLeavePAPopup.bind(this)}/>\n        <AppBar fromVersion={this.state.fromVersion} toVersion={this.state.toVersion} />\n        <FooterBar statuses={this.state.statuses} handleStatusChange={this.handleStatusChange.bind(this)}/>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}